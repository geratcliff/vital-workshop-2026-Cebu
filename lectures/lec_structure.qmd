---
title: "Structuring a Markov Model"
format:
  revealjs:
    theme: slides.scss
    incremental: true
    slide-number: true
    logo: ../vchem.png
    bibliography: references.bib
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    footer: |
      [Back to Website](../index.html)
editor_options: 
  chunk_output_type: console
editor: source
---

```{=html}
<style>
.nobullet li {
  list-style-type: none;
}
</style>
```
# Learning Objectives and Outline

<!-- Rates: The instantaneous potential for the occurrence of an event, expressed per number of patients at risk. Rates can be added and subtracted. -->

<!-- Probabilities: A number ranging between 0 and 1. Represents the likelihood of an event happening over a specific period of time. -->

<!-- https://www.hsrd.research.va.gov/for_researchers/cyber_seminars/archives/2401-notes.pdf -->

<!-- https://link.springer.com/article/10.1007/s40273-020-00937-z -->

<!-- https://www.valueinhealthjournal.com/article/S1098-3015(12)01654-3/fulltext?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS1098301512016543%3Fshowall%3Dtrue -->

```{r}
library(knitr)
library(kableExtra)
library(tidyverse)
```

## Learning Objectives

::: incremental
-   Understand differences between rates and probabilities, hazard rates, relative risks, and other relevant model inputs.
-   Understand rate-to-probability conversion formulas and transition probability embedding.
-   Explain how to embed a transition probability matrix with a defined timestep.
-   Explore age-, time- and country/region-specific adjustments to a Markov model.
:::

# Outline {.smaller}

::: incremental
1.  Rates, probabilities, and other model inputs.
2.  Constructing the transition probability matrix.
3.  Model dynamics

-   Non-stationary rates: mortality and other time/age-varying parameters.
-   Tunnel states and other disease-specific transition dynamics
:::

## Goal

![](images/paste-DE23E852.png)

## What *Never* Happens

![](images/paste-35C55E40.png)

## Problem

-   Need transition probabilities but literature-based parameters are reported as:

::: incremental
1.  Rates
2.  Hazard ratios
3.  Odds ratios
4.  Relative risks
5.  Transition probabilities (rare!)
:::

# How can we deal with this? {background="#c2f0c2"}

## Solution

::: incremental
-   Need "common ground" where we can combine and transform different model inputs.
-   This "common ground" is often found in a **transition rate matrix.**
:::

## Solution

![](images/paste-23D41BA7.png)

## Solution

![](images/paste-7BE7C6AF.png)

## Solution

![](images/paste-EFB5816C.png)

## Solution

![](images/paste-500FB9B7.png)

## Transition Rate Matrix {background-image="images/paste-7BE7C6AF.png" data-background-size="contain" background-opacity="0.2"}

::: incremental
-   The central "hub" of a Markov model.
-   Straightforward to convert rate matrix into a transition probability matrix.
-   Can be used to change the cycle length.
-   Facilitates modeling using alternative techniques:
    -   Continuous time Markov
    -   Discrete event simulation
:::

## Four-Step Process

::: incremental
1.  Use data inputs/published literature to define a rate matrix $\mathbf{R}$.
2.  Make strategy-specific adjustments to $\mathbf{R}$ as needed.
3.  "Embed" the transition probability matrix using the rate matrix
4.  Make further overall or strategy-specific adjustments to $\mathbf{P}$ as needed.
:::

# What is the difference between a rate and a probability? {background="#c2f0c2"}

## Rates vs. Probabilities

::: incremental
-   **Rate**: number of occurrences of an event per unit of time.
-   **Probability**: Liklihood that an event will occur for an in individual over a defined time period.
-   Major difference is in denominator: rates take into account **time at risk** while probabilities do not.
:::

## Rates vs. Probabilities

![](images/paste-83525383.png)

## Rates

::: incremental
-   Number of events divided by the total time at risk experienced by all people followed.
-   Ranges from 0 to $\infty$.
-   $\frac{\# \text{events in time period}}{\text{Total time period experienced by all subjects followed}}$
:::

## Rates

![](images/paste-8191B0E3.png)

## Probabilities

![](images/paste-62FF1911.png)

## Rates vs. Probabilities: Example[^1]

[^1]: Source: @gidwaniEstimatingTransitionProbabilities2020

::: incremental
-   Suppose a study followed 100 people with congestive heart failure for 4 years.
-   At the end of 4 years, 40 had died.
-   The probability of death over 4 years is $40/100=0.40$.
:::

## Rates vs. Probabilities: Example[^2]

[^2]: Source: @gidwaniEstimatingTransitionProbabilities2020

::: incremental
-   A rate takes into acccount the time each person was at risk.
-   The 60 who survived were at risk the entire 4 years and contributed $60 \times 4 = 240$ years at risk.
-   Once a person dies, he/she is no longer at risk.
:::

## Rates vs. Probabilities: Example[^3]

[^3]: Source: @gidwaniEstimatingTransitionProbabilities2020

::: incremental
-   When a study does not report time at risk, the conventional assumption is that the events were spread evenly over the time period.
-   Using this assumption, the average time at risk for the 40 who died was 2 years, adding 40 Ã— 2 = 80 years at risk.
:::

## Rates vs. Probabilities: Example[^4]

[^4]: Source: @gidwaniEstimatingTransitionProbabilities2020

::: incremental
-   Total time at risk for the cohort of 100 people is 320 person-years (240+80).
-   Thus, the rate of death from CHF is 40/320 = 0.125 deaths per person-year.
-   Let's now construct a rate matrix with three states: CHF, Death from CHF, and Death from other causes.
:::

## Rates vs. Probabilities: Example

```{r}
m_P <- matrix(0,nrow=3,ncol=3,dimnames=list(c("CHF","D_CHF","D_OTH"),c("CHF","D_CHF","D_OTH")))
#m_P[1,2] <- 0.125
#m_P[1,3] <- 0.006
m_P %>% kable()
```

## Rates vs. Probabilities: Example

::: incremental
-   0.125 per person year is the **rate** we'd enter into our rate matrix.
-   We could also think of a separate death rate from background causes (e.g., 0.006 per person-year).[^5]
:::

[^5]: This often comes from separate vital statistics / life-table data sources.

## Rates vs. Probabilities: Example

```{r}
m_P[1,2] <- 0.125
m_P[1,3] <- 0.006
m_P %>% kable()
```

## Rates vs. Probabilities: Example {.smaller}

::: columns
::: column
::: incremental
-   The diagonal elements in a rate matrix are just the negative sum of the off-diagonal elements.
-   In this example, the diagonal value for the 1st row would be -0.131 = -(0.125+0.006)
-   We can leave all other rate matrix values at 0 because the rate of progression from death to other states is zero.
:::
:::

::: column
::: {style="padding-top: 125px; font-size: 0.8em"}
```{r}
m_P <- matrix(0,nrow=3,ncol=3,dimnames=list(c("CHF","Death_CHF","Death_Other"),c("CHF","Death_CHF","Death_Other")))
m_P[1,2] <- 0.125
m_P[1,3] <- 0.006
m_P[1,1] <- -c(.125+.006)
m_P %>% data.frame() %>% 
   mutate(CHF = cell_spec(CHF, 
                               color = ifelse(CHF<0,"white","black"),
                               background= ifelse(CHF<0,"red","white"),
                               bold = ifelse(Death_CHF<0,T,F)))  %>% 
  kable('html', booktabs =TRUE, escape = FALSE) %>% kable_styling()
```
:::
:::
:::

## Summary: Rates vs. Probabilities

::: {style="font-size: 0.6em"}
| Statistic        | Evaluates                                                                                               | Range         | Applicable Domain  |
|-----------|---------------------------------------|-----------|-----------|
| Rate             | $\frac{\# \text{events in time period}}{\text{Total time period experienced by all subjects followed}}$ | 0 to $\infty$ | Rate matrix        |
| Probability/risk | $\frac{\# \text{events in time period}}{\# \text{people followed for time period}}$                     | 0-1           | Probability matrix |
:::

## 1. Place rates in a rate matrix $\mathbf{R}$.

![](images/paste-01DABA0F.png)

## 1. Place rates in a rate matrix $\mathbf{R}$. {.smaller}

::: columns
::: column
::: incremental
-   Country/region-specific background mortality rate (0.006)
-   Disease mortality rates from existing population-based epidemiological study. (e.g., 0.125 = 40 cases per 320 person-years)
-   Diagonal value that is the negative sum of the off-diagonal values in each row (-0.131).
:::
:::

::: column
::: {style="padding-top: 125px; font-size: 0.8em"}
"Natural History" (i.e., "do nothing") rate matrix:

```{r}
m_P %>% kable()
```
:::
:::
:::

## 1. Place rates in a rate matrix $\mathbf{R}$.

::: incremental
-   What we have just done is contruct a rate matrix for a "natural history" model of the disease (CHF).
-   This is a version of the model in which we allow the disease process to play out naturally, with no further intervention.
-   Sometimes called a "do nothing" strategy.
:::

## 1. Place rates in a rate matrix $\mathbf{R}$.

::: incremental
-   The "natural history" model is useful because it can help us verify that the model matches what we see in the "real world."
-   The "natural history" model also can be used to calibrate transition rates to different countries/contexts.
-   For example, we could recalibrate the model so the CHF mortality transition rate matches our country-specific data.
:::

## 1. Place rates in a rate matrix $\mathbf{R}$.

::: incremental
-   Alternatively, suppose we "borrow" a model developed in another country/context.
-   That model will be based on underlying rates specific to that context.
-   The underlying rate matrix can be used to "swap in" transition rates that apply to our country/context.
    -   Example: change the background mortality rate to match you country's.
:::

## 2. Make adjustments to $\mathbf{R}$ as needed.

![](images/paste-20350F55.png)

## 2. Make adjustments to $\mathbf{R}$ as needed. {.smaller}

::: columns
::: column
::: incremental
-   Suppose that a new strategy can reduces the risk of CHF mortality by 20% (i.e., hazard ratio = 0.8).
-   We can simply apply this hazard ratio directly to construct a rate matrix for strategy A.
-   For the Strategy A rate matrix, the rate of CHF death is $0.8 * 0.125 = 0.1$
-   Make sure that the diagonal element is adjusted to account for this change!
:::
:::

::: column
::: {style="font-size: 0.8em"}
"Natural History" rate matrix

```{r}
m_P %>% kable()
```
:::
:::
:::

## 2. Make adjustments to $\mathbf{R}$ as needed. {.smaller}

::: columns
::: column
::: {style="font-size: 1.0em"}
::: nonincremental
-   Suppose that a new strategy can reduces the risk of CHF mortality by 20% (i.e., hazard ratio = 0.8).
-   We can simply apply this hazard ratio directly to construct a rate matrix for strategy A.
-   For the Strategy A rate matrix, the rate of CHF death is $0.8 * 0.125 = 0.1$
-   Make sure that the diagonal element is adjusted to account for this change!
:::
:::
:::

::: column
::: {style="font-size: 0.8em"}
"Natural History" rate matrix

```{r}
m_P %>% kable()
```

"Strategy A" rate matrix

```{r}
m_P_A <- m_P
m_P_A[1,2] = 0.8 * m_P[1,2]
m_P_A[1,1] = - (m_P_A[1,2] + m_P_A[1,3])
m_P_A %>% 
  data.frame() %>% 
  mutate(Death_CHF = cell_spec(Death_CHF, 
                               color = ifelse(Death_CHF>0,"white","black"),
                               background= ifelse(Death_CHF>0,"red","white"),
                               bold = ifelse(Death_CHF>0,T,F))) %>% 
   mutate(CHF = cell_spec(CHF, 
                               color = ifelse(CHF<0,"white","black"),
                               background= ifelse(CHF<0,"red","white"),
                               bold = ifelse(Death_CHF<0,T,F))) %>% 
  kable('html', booktabs =TRUE, escape = FALSE) %>% kable_styling()
```
:::
:::
:::

## 2. Make adjustments to $\mathbf{R}$ as needed. {.smaller}

::: columns
::: column
::: incremental
-   Another adjustment we could make at this stage is the time cycle length.
-   Suppose our rate matrix is defined in terms of a one-year time cycle, but we want to convert to a monthly cycle.
-   In that event, we'd simply divide each rate in the matrix by 12, and the resulting matrix would be for a monthly timestep.
:::
:::

::: column
::: {style="font-size: 0.8em"}
"Natural History" rate matrix (one-year timestep)

```{r}
m_P %>% kable()
```
:::
:::
:::

## 2. Make adjustments to $\mathbf{R}$ as needed. {.smaller}

::: columns
::: column
::: nonincremental
-   Another adjustment we could make at this stage is the time cycle length.
-   Suppose our rate matrix is defined in terms of a one-year time cycle, but we want to convert to a monthly cycle.
-   In that event, we'd simply divide each rate in the matrix by 12, and the resulting matrix would be for a monthly timestep.
:::
:::

::: column
::: {style="font-size: 0.8em"}
"Natural History" rate matrix (one-year timestep)

```{r}
m_P %>% kable()
```

"Natural History" rate matrix (one-month timestep)

```{r}
(m_P/12) %>% data.frame() %>% dplyr::mutate_if(is.numeric, funs(as.character(signif(., 3)))) %>%
    kable(.)
```
:::
:::
:::

## 3. "Embed" the transition probability matrix using the rate matrix

![](images/paste-CC9FEF98.png)

## 3. "Embed" the transition probability matrix using the rate matrix

::: incremental
-   Our next step is to convert the transition rate matrix into a transition probability matrix.
-   Common practice is to use rate-to-probability conversion formulas
:::

## 3. "Embed" the transition probability matrix using the rate matrix

::: nonincremental
-   Our next step is to convert the transition rate matrix into a transition probability matrix.
-   Common practice is to use rate-to-probability conversion formulas
:::

$$
p = 1 - \exp(-rt)
$$ where $r$ is the rate and $t$ is the time-step.

## 3. "Embed" the transition probability matrix using the rate matrix

::: incremental
-   This formula works fine when there is only one possible state an individual can transition to.
-   The formula **will not** calculate the correct transition probability if there are two or more states someone can transition to.
<!-- -   See the [workshop blog posting](../blog/posts/embedding-a-transition-probability-matrix.html) for more. -->
:::

## 3. "Embed" the transition probability matrix using the rate matrix

::: incremental
-   We will cover **two** approaches for constructing a transition probability matrix.
-   The first is technically incorrect, but is widely used and easier to implement because it ignores compound transitions (i.e., multiple transitions within a cycle).
  - You can get around these issues if you use a relatively short cycle length.  
:::

## 3. "Embed" the transition probability matrix using the rate matrix

The two approaches

::: nobullet
::: incremental
-   3a. Construct a transition probability matrix using rate-to-probability conversion formulas.
-   3b. Embed the transition probability matrix using the rate matrix exponential (i.e., $\mathbf{P}=e^{\mathbf{R}}$).
:::
:::

## 3a. Rate-to-probability conversion

The probability of transitioning from health state $A$ to health state $B$ is:

$$
p_{AB}= \frac{r_{AB}}{\sum_S r_{AS}}\big ( 1 - e^{-(\sum_S r_{AS}) t}\big )
$$ where $S$ captures all the health states (i.e., columns) in the transition rate matrix, and $t$ is the time-step (e.g., $t=1$ if 1 year, $t=1/12$ if one month, etc.).

## 3a. Rate-to-probability conversion

Let's build on our chronic heart failure example from earlier. Here is the transition rate matrix we constructed:

```{r}
dimnames(m_P) <- list(c("CHF","D_CHF","D_OTH"),c("CHF","D_CHF","D_OTH"))
m_P %>% kable()
```

## 3a. Rate-to-probability conversion

Let's now calculate the probability of transitioning from the **CHF** state to **D_CHF** (death from heart failure).

## 3a. Rate-to-probability conversion

Annual probability of transitioning from CHF to death from CHF: 

$$
p_{\text{CHF,D_CHF}}= \frac{r_{\text{CHF,D_CHF}}}{r_{\text{CHF,D_CHF}} + r_{\text{CHF,D_OTH}}}\big ( 1 - e^{-(r_{\text{CHF,D_CHF}} + r_{\text{CHF,D_OTH}}) \times 1}\big )
$$

We can find each of these rates in our transition rate matrix...

## 3a. Rate-to-probability conversion

Annual probability of transitioning from CHF to death from CHF:

$$
p_{\text{CHF,D_CHF}}= \frac{\color{red}{0.125}}{\color{red}{0.125}+\color{green}{0.006}}\big ( 1 - e^{-(\color{red}{0.125}+\color{green}{0.006}) \times 1}\big ) = 0.1172
$$

```{r}
m_P %>% data.frame() %>% 
    mutate(D_CHF = cell_spec(D_CHF, 
                               color = ifelse(D_CHF>0,"white","black"),
                               background= ifelse(D_CHF>0,"red","white"),
                               bold = ifelse(D_CHF>0,T,F))) %>% 
   mutate(D_OTH = cell_spec(D_OTH, 
                               color = ifelse(D_OTH>0,"white","black"),
                               background= ifelse(D_OTH>0,"green","white"),
                               bold = ifelse(D_OTH>0,T,F))) %>% 
  kable('html', booktabs =TRUE, escape = FALSE) %>% kable_styling()
```

## 3a. Rate-to-probability conversion

Let's now calculate the probability of transitioning from the **CHF** state to **D_OTH** (death from other causes).

## 3a. Rate-to-probability conversion

Annual probability of transitioning from CHF to death from **other causes**:

$$
p_{\text{CHF,D_CHF}}= \frac{\color{green}{0.006}}{\color{red}{0.125}+\color{green}{0.006}}\big ( 1 - e^{-(\color{red}{0.125}+\color{green}{0.006}) \times 1}\big ) = 0.00562
$$

```{r}
m_P %>% data.frame() %>% 
    mutate(D_CHF = cell_spec(D_CHF, 
                               color = ifelse(D_CHF>0,"white","black"),
                               background= ifelse(D_CHF>0,"red","white"),
                               bold = ifelse(D_CHF>0,T,F))) %>% 
   mutate(D_OTH = cell_spec(D_OTH, 
                               color = ifelse(D_OTH>0,"white","black"),
                               background= ifelse(D_OTH>0,"green","white"),
                               bold = ifelse(D_OTH>0,T,F))) %>% 
  kable('html', booktabs =TRUE, escape = FALSE) %>% kable_styling()
```

## 3a. Rate-to-probability conversion

::: incremental
-   We now have the quantities needed to complete the first row of our transition rate matrix.

-   Recall that the diagonal elements of the transition probability matrix are just 1 minus the other transition probabilities.
:::

## 3a. Rate-to-probability conversion

Calculated transition probability matrix:

```{r}
m_P2 <- m_P
m_P2[1,2] <- (m_P[1,2]/(m_P[1,2]+m_P[1,3]))*(1-exp(-((m_P[1,2]+m_P[1,3]))))
m_P2[1,3] <- (m_P[1,3]/(m_P[1,2]+m_P[1,3]))*(1-exp(-((m_P[1,2]+m_P[1,3]))))
m_P2[1,1] <- 1 - m_P2[1,2] - m_P2[1,3]
m_P2[2,2] <- 1
m_P2[3,3] <- 1

m_P2 %>% data.frame() %>% 
  kable(digits =4) %>% kable_styling()

```

## 3b. Exponentiate the transition rate matrix

::: incremental
-   The most technically correct approach for "embedding" a transition probability matrix is using the rate matrix exponential.

-   This is a matrix analogue to the cellwise rate-to-probability matrix process we just went through.
:::

## 3b. Exponentiate the transition rate matrix

$$
\mathbf{P} = e^{\mathbf{R}}
$$

## 3b. Exponentiate the transition rate matrix

Pros:

::: incremental
-   Embedding the transition probability matrix in this way ensures that the correct transition probabilities are calculated.

-   Without going into too many details, this approach ensures that some compound transitions are not "hidden" in the Markov cycle.

-   This ensures that our discrete time Markov model accurately represents the underlying continuous time process.
:::

## 3b. Exponentiate the transition rate matrix

Cons:

::: incremental
-   A major drawback is that this approach can create some "jumpover" states that are seemingly inconsistent with the underlying model (see blog for more).

-   Accounting for "hidden" transitions and jumpover states requires augmenting the transition probability matrix (again, see blog for details).
:::

## 3b. Exponentiate the transition rate matrix

Cons, cont'd:

::: incremental
-   Excel does not easily do matrix exponentiation, however you can use an approximation via a "power series expansion"

-   Modern (free) statistical software can easily exponentiate a matrix:
:::

## 3b. Exponentiate the transition rate matrix

Cons, cont'd:

-   Excel does not easily do matrix exponentiation, however you can use an approximation (we'll do this in a case study).

-   Modern (free) statistical software can easily exponentiate a matrix:

``` r
library(expm)
m_P = expm(m_R)
```

## 3b. Exponentiate the transition rate matrix

For our chronic heart failure example, the exponentiated matrix yields a very similar answer to the first approach:

```{r}
library(expm)
m_P %>% expm() %>% kable(digits = 4)
```

## So Where Are We Now?

![](images/paste-EFB5816C.png)

## So Where Are We Now?

::: incremental
-   By constructing our model using the "roots" of a transition rate matrix, we can incorporate disparate sources of information.

-   Facilitates country/region-specific background mortality.

-   Facilitates standardizing inputs measured at different time intervals.
:::

## So Where Are We Now?

::: incremental
-   Not all literature-based parameters operate on transition rates.

-   You will often find that the strategies you want to model have inputs based on odds ratios, relative risks, risk differences, etc.
:::

## CHF Example, Continued

::: incremental
-   Recall from earlier that we constructed two transition rate matrices:

    1.  "Natural History" rate matrix
    2.  Strategy A ("New Drug") rate matrix based on a hazard ratio (for CHF mortality) of 0.8.
:::

## CHF Example, Continued

These two rate matrices can be used to construct the following transition probability matrices:

::: {style="font-size: 0.7em"}
::: columns
::: column
m_P_NH =

```{r}
expm(m_P) %>% kable(digits=4)
```
:::

::: column
m_P_A =

```{r}
dimnames(m_P_A) = dimnames(m_P)
expm(m_P_A) %>% kable(digits=4)
```
:::
:::
:::

## CHF Example, Continued

::: nonincremental
-   Now suppose we wanted to model a second strategy ("B") based on a randomized trial of another drug.
-   That trial reports an odds ratio (OR) of CHF death of 0.75.
-   The probability of CHF death in the placebo (control) arm in that trial was 0.15.[^6]
:::

[^6]: Note this is slightly higher than the corresponding probability in our natural history transition probability matrix (0.1172), reflecting the fact that randomized trial participants are not necessarily representative of the entire population!

## CHF Example, Continued

::: incremental
-   An odds ratio is based on the odds of an outcome happening, which is directly related to the probability.
-   Odds = $\frac{\text{Probability of Outcome}}{1 - \text{Probability of Outcome}}$
-   Odds Ratio = $\frac{\text{Odds of outcome in exposed}}{\text{Odds of outcome in unexposed}}$
:::

## CHF Example, Continued

::: callout-important
Not all literature-based parameters operate on the rate scale. Some operate on the probability scale!
:::

## 4. Make adjustments to $\mathbf{P}$ as needed.

![](images/paste-369710A3.png)

## 4. Make adjustments to $\mathbf{P}$ as needed.

::: incremental
-   Constructing our final transition probability matrix---for natural history or more specifically for for a stratgey under consideration--may require further adjustment.
-   We must be careful about the *scale* on which these parameters apply.
-   Odds ratios, relative risks, and risk differences all operate on the *probability* scale.
:::

## 4. Make adjustments to $\mathbf{P}$ as needed.

::: {style="font-size: 0.5em"}
| Statistic        | Evaluates                                                                                               | Range         | Applicable Domain  |
|-----------|---------------------------------------|-----------|-----------|
| Rate             | $\frac{\# \text{events in time period}}{\text{Total time period experienced by all subjects followed}}$ | 0 to $\infty$ | Rate matrix        |
| Hazard Ratio     | $\frac{\text{Hazard rate of outcome in exposed}}{\text{Hazard rate of outcome in unexposed}}$           | 0 to $\infty$ | Rate matrix        |
| Probability/risk | $\frac{\# \text{events in time period}}{\# \text{people followed for time period}}$                     | 0-1           | Probability matrix |
| Odds             | $\frac{\text{Probability of Outcome}}{1 - \text{Probability of Outcome}}$                               | 0 to $\infty$ | Probability matrix |
| Odds Ratio       | $\frac{\text{Odds of outcome in exposed}}{\text{Odds of outcome in unexposed}}$                         | 0 to $\infty$ | Probability matrix |
| Relative Risk    | $\frac{\text{Probability of outcome in exposed}}{\text{Probablity of outcome in unexposed}}$            | 0 to $\infty$ | Probability matrix |
| Risk Difference  | $\text{Probability of outcome in exposed}-\text{Probablity of outcome in unexposed}$                    | -1 to 1       | Probability matrix |
:::

## 4. Make adjustments to $\mathbf{P_s}$ as needed.

![](images/paste-369710A3.png)

## CHF Example, Continued

Let's turn back to our CHF example.

::: incremental
-   Suppose we wanted to model a second strategy ("B") based on a randomized trial of another drug.
-   That trial reports an odds ratio (OR) of CHF death of 0.75.
-   The probability of CHF death in the placebo (control) arm in that trial was 0.15.
:::

## CHF Example, Continued

::: nonincremental
-   We can convert an odds ratio to a relative risk (i.e., ratio of probabilities) if we know the baseline (unexposed) probability of the outcome, $p_0$.
-   In this case we were able to find $p_0=0.15$ in the underlying clinical trial.
-   If we didn't have this information, we might **assume** its the same (0.1172) as in our underlying natural history probability matrix[^7]
:::

[^7]: Though note this is an assumption, so we should incorporate a lot of uncertainty around it in our model!

## CHF Example, Continued

::: incremental
-   We can convert an odds ratio to a **relative risk** (RR).[^8]
-   $RR = \frac{\text{Probability of outcome in exposed}}{\text{Probablity of outcome in unexposed}} = \frac{p_1}{p_0} = \frac{OR}{(1-p_0+(p_0 \times OR))}$
-   A relative risk is the ratio of the probability of the outcome in the exposed group to the probability of the outcome in the unexposed group.
:::

[^8]: If the incidence of the outcome is fairly rare ($p_0<0.10$), you will often see people simply use the OR as a RR. Source for conversion formula: @zhangWhatRelativeRisk1998

## CHF Example, Continued

::: incremental
-   $RR = \frac{p_1}{p_0}$
-   $p_1 = RR \times p_0$
-   $p_{D_{CHF}} = 0.75 \times .15 = 0.1125$
:::

## CHF Example, Continued

::: {layout-ncol="2" style="font-size: 0.55em"}
```{r}
expm(m_P) %>% kable(digits=4,caption = "m_P =") %>% kable_styling()
```

```{r}
dimnames(m_P_A) = dimnames(m_P)
expm(m_P_A) %>% kable(digits=4,caption = "m_P_A =")
```

```{r}
m_P_B = expm(m_P) 
m_P_B[1,2] = 0.75 * .15
m_P_B[1,1] = 1 - m_P_B[1,2] - m_P_B[1,3]
m_P_B %>% kable(digits=4,caption = "m_P_B =")
```

Transition probability matrices (NH = Natural History; A = Strategy A; B = Strategy B)
:::

## Full Process

![](images/paste-E2EB7E3D.png)

# Nonstationary Transitions

## Transition Dynamics

::: incremental
-   We have focused on "static" transition rate/probability matrices.
-   Often, transitions vary as a function of time.
:::

## Transition Dynamics

::: incremental
-   Nonstationary rates: background mortality rate rises with age.
-   Nonstationary rates: transition to disease status may vary over different ages.
-   Time-dependent event transitions: rate of adverse events after disease onset is higher in first cycle, lower in subsequent cycles.
:::

## Age-Varying Background Mortality

::: incremental
-   Useful data source is life table data. You used this in the Alive-Dead case study!
-   May be available from vital statistics division in your country.
-   Also available (by region) [from the UN](https://www.un.org/development/desa/pd/data/model-life-tables) and other organizations.
:::

##  {background-image="media/life-table-un.png" data-background-size="contain"}


## Nonstationary Rates

-   You may have other parameters that vary by age.
    -   Disease specific mortality rate:

![](images/paste-EA4566AA.png)

Source: @russellWhatPertussisMortality2016

## Nonstationary Rates

-   You may have other parameters that vary by age.
    -   Disease specific mortality rate:
    -   Age-specific intervention rates/probabilities

![](images/paste-0AB76A08.png){fig-align="center" height="300px"}

Source: @russellWhatPertussisMortality2016

## Nonstationary Rates

::: incremental
-   It is straightforward to incorporate these dynamics into a Markov model.
-   Essentially, you recalculate the transition probability matrix in each cycle.
-   This works long as the underlying rates/probabilities change by age.
-   Amua can handle all of this for you, provided you enter the age-specific "lookup table" in the model (just as with background mortality). 
:::

## Other Transition Dynamics

::: incremental
-   Suppose, instead, that event/transition rates, costs, quality of life vary over the course of a disease or other process in our model.
-   Example: cost, quality of life weight, or risk of adverse event (e.g., death) is different in first year after disease onset, and changes thereafter.
-   These types of dynamics are more challenging to implement -- but you can often do it!
:::

## Other Transition Dynamics

::: incremental
-   One option is to simply build a decision tree around events that occur at higher rates shortly after disease onset, surgery, drug initiation, etc.

-   The decision tree can follow people until they reach a "steady state" --- then the Markov model can pick up from there.
:::

## Other Transition Dynamics

::: incremental
-   Another option is "tunnel states" --- simply expand the health state to follow people over the first few cycles of onset.

-   Tunnel states are "non-markovian," so they need to be added once you have the transition probability matrix defined.
:::

## Tunnel States: Healthy, Sick, Dead

::: incremental
-   Let's take a simple healthy, sick, dead model.
-   Illness onset rate = 0.0314
-   Background mortality rate = 0.0094
-   Illness increases the risk of death by a hazard ratio of 5.45.
:::

## Tunnel States: Healthy, Sick, Dead

Transition rate matrix: $\mathbf{R}$

```{r}

m_P_ <- matrix(c(0.96,0.03,0.01,0,0.95,0.05,0,0,1),byrow = TRUE, nrow=3,ncol=3,dimnames = list(c("H","S","D"),c("H","S","D")))

V  <- eigen(m_P_)$vectors
iV <- solve(V)
Ap <- iV %*% m_P_ %*% V

lAp <- diag(log(diag(Ap)), nrow(Ap), ncol(Ap))

m_R  <- V %*% lAp %*% iV

dimnames(m_R) = list(c("H","S","D"),c("H","S","D"))

# m_R <- matrix(0, nrow=3, ncol=3, dimnames = list(c("H","S","D"),c("H","S","D")))
# m_R[1,2] <- .1
# m_R[1,3] <- 0.006
# m_R[2,3] <- 0.006 * 5
# diag(m_R) = -rowSums(m_R)

m_R %>% kable(digits = 4) %>% kable_styling()

```

## Tunnel States: Healthy, Sick, Dead

Transition probability matrix: $\exp(\mathbf{R})$

```{r}
library(expm)
m_P <- expm(m_R) 
m_P %>% kable(digits = 4) %>% kable_styling()

```

## Tunnel States: Healthy, Sick, Dead

::: incremental
-   Now suppose that the probability of death from disease varies by time since disease onset.

    -   0.08 in first year
    -   0.06 in second year
    -   0.04 in third year onwards

-   We can add tunnel states to our transition probability matrix to accomodate this.
:::

## Tunnel States: Healthy, Sick, Dead

-   Here is the new transition probability matrix.
-   Notice how the tunnel states "force" people to transition either to the next disease state if they do not die of the disease in the cycle.

::: {style="font-size: 0.8em"}
```{r}
m_Pt <- cbind(m_P,matrix(0,nrow=nrow(m_P),ncol=2,dimnames=list(rownames(m_P),c("S1","S2"))))
m_Pt <- m_Pt[,c("H","S1","S2","S","D")]
m_Pt <- rbind(m_Pt,matrix(0,nrow=2,ncol=ncol(m_Pt),dimnames=list(c("S1","S2"),colnames(m_Pt))))
m_Pt <- m_Pt[c("H","S1","S2","S","D"),]
m_Pt["S1","D"] <- 0.08
m_Pt["S2","D"] <- 0.06
m_Pt["S","D"] <- 0.04
diag(m_Pt) = rep(0,nrow(m_Pt))
diag(m_Pt) = 1-rowSums(m_Pt)
m_Pt["S1","S2"] = m_Pt["S1","S1"]
m_Pt["S2","S"] = m_Pt["S2","S2"]
m_Pt["H","S1"] = m_Pt["H","S"]
m_Pt["H","S"] =0
diag(m_Pt) = rep(0,nrow(m_Pt))
diag(m_Pt) = 1-rowSums(m_Pt)

m_Pt %>% 
  kable() %>% 
  kable_styling()
```
:::

## Tunnel States: Healthy, Sick, Dead {.smaller}

-   If we run out the Markov trace for five cycles, here are the results.

::: {style="font-size: 0.75em"}
```{r}
library(Matrix)
0:5 %>% map_df(~({
  c(1000,0,0,0,0) %*% (m_Pt %^% .x) %>% 
    {round(.,0)} %>% 
    data.frame()
})) %>% 
  mutate(cycle = row_number()-1) %>% 
  mutate(S_total = S1 + S2 + S) %>% 
  select(cycle,H,S1,S2,S,S_total,D) %>% 
  kable() %>% 
  kable_styling()

```
:::

# References

::: {#refs}
:::
