{"title":"9. Systematic Approaches to Understanding Model Uncertainty","markdown":{"yaml":{"title":"9. Systematic Approaches to Understanding Model Uncertainty","format":{"revealjs":{"theme":"slides.scss","incremental":false,"slide-number":true,"logo":"../vchem.png","html-math-method":"katex","transition":"fade","background-transition":"fade","highlight-style":"ayu-mirage","footer":"[Back to Website](../index.html)\n"}},"editor_options":{"chunk_output_type":"console"},"editor":{"markdown":{"wrap":72}},"bibliography":"references.bib"},"headingText":"Learning Objectives and Outline","containsRefs":false,"markdown":"\n\n\n## Learning Objectives\n\n::: incremental\n1.  Discuss common sources of uncertainty in decision models.\n2.  Explain how to draw parameter values from an uncertainty distribution.\n3.  Understand inputs and outputs of a PSA\n4.  Characterize decision uncertainty using cost-effectiveness acceptability curves and frontiers.\n:::\n\n## Lecture Outline\n\n::: incremental\n1.  Why Do We Study Uncertainty in a Decision Model?\n2.  How Do We Conduct a Probabilistic Sensitivity Analysis?\n3.  How Do We Summarize PSA Results?\n:::\n\n# 1. Why Do We Study Uncertainty in a Decision Model?\n\n## Two Fundamental Questions of Decision Analysis\n\n::: incremental\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n:::\n\n## Two Fundamental Questions of Decision Analysis\n\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n\n::: incremental\n-   Model outcomes (e.g., ICERs) will be sensitive to all sources of uncertainty.\n-   **Key Question**: Does this sensitivity *change decisions*?\n:::\n\n## Two Fundamental Questions of Decision Analysis\n\n2.  Should we invest more resources to reduce uncertainty in our decisions?\n\n## Role of Probabilistic Sensitivity Analysis in a Decision Model\n\n::: incremental\n-   Quantify the degree of decision uncertainty in our model.\n-   Is it worth pursuing additional research to reduce uncertainty?\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n::: incremental\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n\n-   Each patient will have a different \"experience\" in the model, which will create variation in model outputs (e.g., total costs, QALYS) both *within* the model and *across* different model runs.\n-   Not relevant for Markov cohort models because those models are **deterministic**---they capture the average experience of a population, and do not simulate individual patient trajectories within that population.\n-   Relevant source of uncertainty for discrete event simulation and microsimulation models.\n-   Can often be minimized via modeling choices (i.e., simulate a lot of patients!)\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n\n::: incremental\n2.  **Second-order**: Uncertainty in the \"true\" value of underlying parameters.\n\n-   Model parameters are often estimated with uncertainty (e.g., 95% confidence interval)\n-   You may have assumed or calibrated parameters not rooted in a published research study; there is uncertainty involved in these processes, too!\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n2.  **Second-order**: Uncertainty in the \"true\" value of underlying parameters.\n\n::: incremental\n3.  **Model structure uncertainty**: Different choices on how to construct the structure of your model will result in different outcome estimates.\n\n-   Different choices for cycle correction (e.g., half-cycle, Simpson's 1/3, etc.)\n-   Different choices for how to construct transition probability matrices (e.g., rate-to-probability conversion formulas vs. embedding via Matrix exponentiation)\n:::\n\n## Heterogeneity vs. Uncertainty\n\n-   Uncertainty: variation in model outputs due to stochastic experiences of patients, sensitivity to input parameter values, etc.\n-   Heterogeneity: variation in model outputs due to differences in patient characteristics.\n\n## Heterogeneity vs. Uncertainty\n\n![](images/paste-E8F213DC.png)\n\nSource: [Briggs et al., \"Model Parameter Estimation and Uncertainty: A Report of the ISPOR-SMDM Modeling Good Research Practices Task Force-6\"](https://www.ispor.org/docs/default-source/resources/outcomes-research-guidelines-index/model_parameter_estimation_and_uncertainty-6.pdf?sfvrsn=8bc10c8e_0)\n\n## When Does Uncertainty Matter?\n\n```{r}\n#| eval: false\n#| warning: false\n#| message: false \nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(gganimate)\nlibrary(patchwork)\n\ndf <- tibble(x = -1, y = 1 , scenario = 1, colour = \"red\")\ndf_2 <- tibble(x = rnorm(n = 200, mean = -1, sd=0.2), \n              y = rnorm(n=200, mean=1, sd=0.1),\n              scenario = 2) %>% \n  mutate(colour = ifelse(x<=0,\"red\",\"blue\")) %>% \n  mutate(seq = row_number())\ndf_3 <- tibble(x = pmin(2,pmax(-2,rnorm(n = 200, mean = -.5, sd=1))), \n              y = pmax(-2,pmin(2,rnorm(n=200, mean=1, sd=0.1))),\n              scenario = 3) %>% \n  mutate(colour = ifelse(x<=0,\"red\",\"blue\")) %>% \n  mutate(seq = row_number())\n\n\np0 <- \ndf %>% \n  ggplot(aes(x = y , y = x)) + geom_point(aes(colour = colour),size=3) +\n  theme_tufte() + \n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank()) + \n  geom_errorbar(aes(ymin = x-1, ymax=x+1, x=y-.5, width =0.2)) +\n  geom_errorbar(aes(ymin = x+1, ymax=x+3, x=y-.5, width =0.2)) +\n  coord_flip() +\n  scale_x_continuous(limits = c(-4,4)) +\n  scale_y_continuous(limits = c(-4, 4), breaks = c(-1,1)) +\n  theme(legend.position = \"none\")\n\ntmp_0  <- p0 +   annotate(\"text\",x = 0,y=-1,label=\"Base Case\\nDecision\",size=5) +\n   annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n    scale_colour_manual(values = c(\"red\"))\ntmp_0 \nggsave(here::here(\"lectures/media/uncertainty-decision-base.png\"),width=10, height=8)\n\n\np0 + geom_point(data = df_2 %>% filter(row_number()==1), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n    scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-1.png\"),width=10, height=8)\n\np0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:2), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5)+\n   scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-2.png\"),width=10, height=8)\n \n p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n    scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-3.png\"),width=10, height=8)\n\nuncert0_anim <- p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  geom_point(data = df_2 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n   scale_colour_manual(values = c(\"red\")) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n  transition_states(seq, state_length = 0); \ntmp <- animate(uncert0_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer())\nanim_save(here::here(\"lectures/media/uncertainty-decision-psa-1.gif\"), tmp)\n\ntmp_ <- p0 + geom_point(data = df_2, alpha = 0.1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n   scale_colour_manual(values = c(\"red\"))\ntmp_ \nggsave(here::here(\"lectures/media/uncertainty-decision-psa-1.png\"),width=10, height=8)\n\n# uncert1_anim <- p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n#   geom_point(data = df_2 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n#   annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n#   annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n#   transition_states(seq, state_length = 0); \n# tmp <- animate(uncert0_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer())\n# anim_save(here::here(\"lectures/media/uncertainty-decision-psa-1.gif\"), tmp)\n\n\nuncert2_anim <- p0 + geom_point(data = df_3 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  geom_point(data = df_3 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n  transition_states(seq, state_length = 0) + \n  scale_colour_manual(values = c(\"blue\",\"red\"))\ntmp <- animate(uncert2_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer()) \nanim_save(here::here(\"lectures/media/uncertainty-decision-psa-2.gif\"), tmp)\n\n  \ntmp_2 <- p0 +   geom_point(data = df_3, alpha=0.1, aes(colour = colour)) +\n  scale_colour_manual(values = c(\"blue\",\"red\")) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) \ntmp_2 \nggsave(here::here(\"lectures/media/uncertainty-decision-psa-2.png\"),width=10, height=8)\n\n\n\n```\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-1.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-2.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-3.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nIn this example, model outputs are sensitive to uncertainty, but **decisions are not**.\n\n![](media/uncertainty-decision-psa-1.gif){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nIn this example, model outputs are sensitive to uncertainty, but **decisions are not**.\n\n![](media/uncertainty-decision-psa-1.png){height=\"600px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nBoth model **outputs** *and* **decisions** are sensitive to uncertainty.\n\n![](media/uncertainty-decision-psa-2.gif){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nBoth model **outputs** *and* **decisions** are sensitive to uncertainty.\n\n![](media/uncertainty-decision-psa-2.png){height=\"600px\" fig-align=\"center\"}\n\n## Markov Cohort Models\n\n![](media/uncertainty-decision-markov.png){height=\"500px\" fig-align=\"center\"}\n\n::: footer\nNote that this picture represents common scenarios; uncertainty may be greater or lesser in any particular modeling context.\n:::\n\n## DES and Microsimulation\n\n![](media/uncertainty-decision-des.png){height=\"500px\" fig-align=\"center\"}\n\n::: footer\nNote that this picture represents common scenarios; uncertainty may be greater or lesser in any particular modeling context. DES = discrete event simulation\n:::\n\n```{r}\nsource(here::here(\"_healthy-sick-dead/01-healthy-sick-dead_setup.r\"))\nsource(here('_healthy-sick-dead/functions_healthy-sick-dead.r'))\n```\n\n```{r, cache=TRUE}\nrun_psa = TRUE\noptions(knitr.kable.NA = '')\n\n\nsource(here(\"_healthy-sick-dead/02_healthy-sick-dead_process-parameters.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/03_healthy-sick-dead_process-parameters_psa.r\"))\nsource(here(\"_healthy-sick-dead/04_healthy-sick-dead_discounting-and-cycle-adjustments.r\"))\nsource(here(\"_healthy-sick-dead/05_healthy-sick-dead_construct-transition-probability-matrices.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/05b_healthy-sick-dead_construct-transition-probability-matrices-psa.r\"))\nsource(here(\"_healthy-sick-dead/06_healthy-sick-dead_process-payoffs.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/06b_healthy-sick-dead_process-payoffs-psa.r\"))\nsource(here(\"_healthy-sick-dead/07_healthy-sick-dead_calculate-markov-trace.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/07b_healthy-sick-dead_calculate-markov-trace-psa.r\"))\nsource(here(\"_healthy-sick-dead/08_healthy-sick-dead_cea-results-base-case.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/08b_healthy-sick-dead_cea-results-psa.r\"))\n\n```\n\n## Probabilistic Sensitivity Analysis\n\n![](media/uncertainty-decision-psa.png){height=\"150px\" fig-align=\"center\"}\n\n# 2. How Do We Conduct Probabilistic Sensitivity Analyses? {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\" background-opacity=\"0.1\"}\n\n## Idea {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\" background-opacity=\"0.1\"}\n\n::: incremental\n-   Run the model many times, each time drawing a given parameter value from its uncertainty distribution.\n-   Collect the parameter values and model outputs (e.g., total costs and QALYs) in a **probabilistic sensitivity analysis (PSA)** dataset.\n-   Analyze the PSA results to construct uncertainty estimates for ICERs, NMB/NHB, etc.\n-   PSA results can also be used for **value of information** that quantify decision uncertainty and the value of future research to reduce uncertainty.\n:::\n\n##  {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\"}\n\n```{r ucertfig, eval = FALSE}\n\n  # params_psa %>% \n  #   bind_cols() %>% \n  #   mutate(i = row_number()) %>% \n  #   gather(parameter, value,-i) %>% \n  #   group_by(parameter)  %>% \n  #   summarise(mean_psa=mean(value)) %>% \n  #   left_join(params %>% bind_cols() %>% gather(parameter,base_case),\"parameter\") %>% \n  #   mutate(diff = abs((mean_psa - base_case)/base_case)) %>% \n  #   arrange(desc(diff)) %>% \n  #   knitr::kable() %>% kableExtra::kable_styling()\n\n  params_psa %>% \n    bind_cols() %>% \n    mutate(i = row_number()) %>% \n    gather(parameter, value,-i) %>% \n    group_by(parameter) %>% \n    nest() %>% \n    mutate(density = map(data,~(\n      {.x %>% ggplot(aes(x=value)) + geom_density()} %>% ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>% \n        select(x,y) %>% as_tibble() %>% mutate(nrow = nrow(.))\n    ))) %>% \n    select(-data) %>% \n    unnest(cols = density) %>% \n    \n    ungroup() %>% \n    filter(!grepl(\"^n_|^d_\",parameter)) %>% \n    left_join(params %>% bind_cols() %>% gather(parameter,base_case),\"parameter\") %>%  \n    left_join({params_psa %>% \n        bind_cols() %>% \n        mutate(i = row_number()) %>% \n        gather(parameter, value,-i) %>% \n        group_by(parameter)  %>% \n        summarise(mean_psa=mean(value))},\"parameter\") %>% \n    ggplot(aes(x = x, y = y)) + geom_line() + \n    facet_wrap(~parameter,scales=\"free\")  +\n    geom_vline(aes(xintercept=base_case), colour = \"black\",lwd=2) +\n    ggthemes::theme_clean() + \n    scale_x_continuous(guide = guide_axis(n.dodge=3)) + \n    labs(x = \"\", y = \"\")\n  \n  ggsave(here::here(\"lectures/media/psa-distribution-plot.png\"),width=10,height=8)\n  \n```\n\n```{r animpdf, eval=FALSE}\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(gganimate)\nset.seed(12)\ndf_norm <- tibble(x=rnorm(10000,mean = 10, sd=3))\ndf_lnorm <- tibble(x = rlnorm(10000,mean=log(3),sd=0.01)); plot(density(df_lnorm$x))\ndf_gamma <- tibble(x = rgamma(10000,shape = 44.4, scale=22.5)); plot(density(df_gamma$x))\ndf_unif <- tibble(x = runif(1e6,min = 0.3,max=0.4)); plot(density(df_unif$x))\n\nanimate_pdf_to_cdf <- function(df, scene_to_show = NULL, q_ = c(0.01,  0.25, 0.5, 0.75,  0.99), breaks_to_show = NULL ) {\n  pdf <-\n    {df %>% ggplot(aes(x = x)) + geom_density()} %>%\n    ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>%\n    as_tibble() %>%\n    select(x,y) %>%\n    data.table(key = \"x\")\n  cdf <-\n    {df %>% ggplot(aes(x = x)) + stat_ecdf()} %>%\n    ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>%\n    as_tibble() %>%\n    select(x,y) %>%\n    data.table(key = \"y\")\n\n  \n  q <- q_ %>%\n    map_dbl(~{\n      quantile(df$x,.x)\n    }) %>%\n    set_names(q_) %>%\n    data.frame() %>%\n    set_names(\"x_\") %>%\n    rownames_to_column(var = \"quantile\") %>%\n    as.data.table(key = \"x_\")\n\n  scene2 <-\n    pdf[q,roll=\"nearest\"] %>%\n    as_tibble() %>%\n    select(y,quantile) %>%\n    right_join(pdf,c(\"y\")) %>%\n    arrange(x,y) %>%\n    mutate(scene = 2) %>%\n    mutate(quantile = glue::glue(\"{as.numeric(quantile)}\"))\n\n  q2 <-\n    q %>%\n    as_tibble() %>%\n    mutate(quantile = as.numeric(quantile)) %>%\n    data.table(key=\"quantile\")\n\n  scene3 <-\n    cdf[q2,roll=\"nearest\"] %>%\n    as_tibble() %>%\n    set_names(c(\"x\",\"quantile\",\"x_\")) %>%\n    select(-x_) %>%\n    right_join(cdf,\"x\") %>%\n    arrange(x,y)  %>%\n    mutate(scene = 3) %>%\n    mutate(quantile = glue::glue(\"{as.numeric(quantile)}\")) %>%\n    ungroup() %>%\n    filter(!is.na(as.numeric(quantile)) | row_number() %in% sample(1:nrow(.),1000)); dim(scene2)\n\n  p_df <-\n    scene2 %>%\n    mutate(scene = 1) %>%\n    bind_rows(scene2) %>%\n    bind_rows(scene3) %>%\n    bind_rows(scene3 %>% mutate(scene=4)) %>%\n    #bind_rows(scene3 %>% mutate(scene=5)) %>%\n    #bind_rows(scene3 %>% mutate(scene=6)) %>%\n    mutate(quantile = ifelse(quantile==\"NA\",NA, quantile))\n\n  p_df_label =\n    p_df %>% filter(!is.na(quantile)) %>%\n    mutate(y = ifelse(scene==1,0,y)) %>%\n    mutate(x = ifelse(scene==4,min(scene3$x),x)) %>%\n    mutate(y = ifelse(scene==6,0,y)) %>%\n    mutate(quantile = glue::glue(\" q{quantile}\"))\n\n  if (!is.null(scene_to_show)) {\n    p_df <- \n      p_df %>% filter(scene==scene_to_show)\n    p_df_label <- \n      p_df_label %>% filter(scene==scene_to_show)\n    p <-\n      p_df %>% ggplot(aes(x = x, y = y))+ geom_line() + geom_text(data = p_df_label , aes(label = quantile, group= quantile),size=3)+\n      scale_y_continuous(breaks = breaks_to_show) +\n      scale_x_continuous(breaks = q$x_, labels = round(q$x_,2),guide = guide_axis(n.dodge=3)) +\n      ggthemes::theme_clean(base_size=15) +\n      labs(x = \"Parameter Value\", y = \"\") \n  } else {\n      p <-\n        p_df %>% ggplot(aes(x = x, y = y))+ geom_line() + geom_text(data = p_df_label , aes(label = quantile, group= quantile))+\n        scale_y_continuous(breaks = seq(0,1,0.1)) +\n        scale_x_continuous(breaks = q$x_, labels = round(q$x_,2)) +\n        ggthemes::theme_clean() +\n        labs(x = \"Parameter Value\", y = \"\") + #facet_wrap(~scene, scales=\"free\"); p\n        gganimate::transition_states(scene) + gganimate::view_follow()\n  }\n\n  return(p)\n\n}\n\ndf_norm %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-norm.png\"),height=4, width=5)\ndf_norm %>% animate_pdf_to_cdf(scene = 3,seq(0,1,0.1)) \nggsave(here::here(\"lectures/media/pdf-to-cdf-norm4.png\"),height=4, width=5)\nset.seed(23)\ndf_norm %>% animate_pdf_to_cdf(scene = 3, q = round(runif(5, min = 0, max = 1),3))\nggsave(here::here(\"lectures/media/pdf-to-cdf-norm_random1.png\"),height=4, width=5)\nanim_norm <- df_norm %>% animate_pdf_to_cdf(breaks_to_show = seq(0,1,0.1))\nanim_save(here::here(\"lectures/media/pdf-to-cdf-norm.gif\"), anim_norm)\n\nanim_gamma1 <- df_gamma %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-gamma.png\"),height=5, width=5)\nanim_gamma3 <- df_gamma %>% animate_pdf_to_cdf(scene = 4)\nggsave(here::here(\"lectures/media/pdf-to-cdf-gamma4.png\"),height=5, width=5)\nanim_gamma <- df_gamma %>% animate_pdf_to_cdf()\nanim_save(here::here(\"lectures/media/pdf-to-cdf-gamma.gif\"), anim_gamma)\n\nanim_lnorm1 <- df_lnorm %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-lnorm.png\"),height=5, width=5)\nanim_lnorm3 <- df_lnorm %>% animate_pdf_to_cdf(scene = 4)\nggsave(here::here(\"lectures/media/pdf-to-cdf-lnorm4.png\"),height=5, width=5)\nanim_lnorm <- df_lnorm %>% animate_pdf_to_cdf()\nanim_save(here::here(\"lectures/media/pdf-to-cdf-lnorm.gif\"), anim_lnorm)\n\nset.seed(123)\nr_HS = \ttibble(x = rgamma(1e4,shape = 30,rate = 200),param=\"r_HS\")\nr_HD\t= tibble(x = rgamma(1e4,shape = 60, rate = 10000),param = \"r_HD\")\nhr_S = \ttibble(x = rlnorm(1e4,log(3), sdlog = 0.01),param = \"hr_S\")\nhr_HS_trtB\t= tibble(x=rlnorm(1e4,log(0.96), sdlog = 0.02),param = \"hr_HS_trtB\")\nhr_HS_trtC\t= tibble(x=rlnorm(1e4,log(0.9), sdlog = 0.02),param = \"hr_HS_trtC\")\nhr_HS_trtD = \ttibble(x=rlnorm(1e4,log(0.92), sdlog = 0.02),param = \"hr_HS_trtD\")\nhr_HS_trtE = \ttibble(x=rlnorm(1e4,log(0.92), sdlog = 0.02), param = \"hr_HS_trtE\")\nu_H\t= tibble(x=rbeta(1e4,shape1 = 200, shape2 = 3), param = \"u_H\")\nu_S\t= tibble(x=rbeta(1e4,shape1 = 130, shape2 = 45), param = \"u_S\")\nc_S\t = tibble(x=rgamma(1e4,shape = 44.4, scale = 22.5), param = \"c_S\")\nc_trtA\t=tibble(x= rgamma(1e4,shape = 12.5, scale = 2), param = \"c_trtA\")\nc_trtB\t=tibble(x= rgamma(1e4,shape = 12, scale = 83.3), param = \"c_trtB\")\nc_trtC\t=tibble(x= rgamma(1e4,shape = 36.144, scale = 83), param = \"c_trtC\")\nc_trtD\t=tibble(x= rgamma(1e4,shape = 14.458, scale = 83), param = \"c_trtD\")\nc_trtE\t=tibble(x= rgamma(1e4,shape = 60.24, scale = 83), param = \"c_trtE\")\n\n\nparams_lut <- c(\"r_HS = gamma(shape = 30,rate = 200)\", \"r_HD = gamma(shape = 60, rate = 10000)\", \"hr_S = lognormal(meanlog = log(3), sdlog = 0.01)\", \"hr_HS_trtB = lognormal(meanlog = log(0.96), sdlog = 0.02)\", \"hr_HS_trtC = lognormal(meanlog = log(0.88), sdlog = 0.02)\", \"hr_HS_trtD = lognormal(meanlog = log(0.92), sdlog = 0.02)\", \"hr_HS_trtE = lognormal(meanlog = log(0.92), sdlog = 0.02)\",\n               \"u_H = beta(shape1 = 200, shape2 = 3)\",\"u_S = beta(shape1 = 130, shape2 = 45)\",\"c_S = gamma(shape = 44.4, scale = 22.5)\", \"c_trtA = gamma(shape = 12.5, scale = 2)\",\"c_trtB = gamma(shape = 12, scale = 83.3)\",\"c_trtC = gamma(shape = 36.144, scale = 83)\",\"c_trtD = gamma(shape = 18.67, scale = 83)\",\"c_trtE = gamma(shape = 60.24, scale = 83)\")\n\n\nparams <- list(r_HS, r_HD, hr_S, hr_HS_trtB, hr_HS_trtC, hr_HS_trtD, hr_HS_trtE,\n               u_H,u_S,c_S, c_trtA,c_trtB,c_trtC,c_trtD,c_trtE)\n\npdf_params <- \n  params %>% \n  map2(.,params_lut,~({\n    .x %>% animate_pdf_to_cdf(scene = 1) + ggtitle(.y)\n    ggsave(here::here(glue::glue(\"lectures/media/{.x$param[1]}.png\")),height=4, width=5)\n  })) %>% \n  set_names(c(\"r_HS:gamma(shape = 30,rate = 200)\", \"r_HD=gamma(shape = 60, rate = 10000)\", \"hr_S=lognormal(meanlog = log(3), sdlog = 0.01)\", \"hr_HS_trtB=lognormal(meanlog = log(0.96), sdlog = 0.02)\", \"hr_HS_trtC=lognormal(meanlog = log(0.88), sdlog = 0.02)\", \"hr_HS_trtD=lognormal(meanlog = log(0.92), sdlog = 0.02)\", \"hr_HS_trtE=lognormal(meanlog = log(0.92), sdlog = 0.02)\",\n               \"u_H=beta(shape1 = 200, shape2 = 3)\",\"u_S=beta(shape1 = 130, shape2 = 45)\",\"c_S=gamma(shape = 44.4, scale = 22.5)\", \"c_trtA=gamma(shape = 12.5, scale = 2)\",\"c_trtB=gamma(shape = 12, scale = 83.3)\",\"c_trtC=gamma(shape = 36.144, scale = 83)\",\"c_trtD=gamma(shape = 18.67, scale = 83)\",\"c_trtE=gamma(shape = 60.24, scale = 83)\"))\n\ncdf_params <- \n  params %>% \n  map2(.,params_lut,~({\n    set.seed(23)\n    .x %>% animate_pdf_to_cdf(scene = 3,q_ = round(runif(5, min = 0, max = 1),3),breaks_to_show = seq(0,1,0.1)) + ggtitle(.y)\n    ggsave(here::here(glue::glue(\"lectures/media/cdf{.x$param[1]}.png\")),height=4, width=5)\n  })) %>% \n  set_names(c(\"r_HS\", \"r_HD\", \"hr_S\", \"hr_HS_trtB\", \"hr_HS_trtC\", \"hr_HS_trtD\", \"hr_HS_trtE\",\n               \"u_H\",\"u_S\",\"c_S\", \"c_trtA\",\"c_trtB\",\"c_trtC\",\"c_trtD\",\"c_trtE\"))\n\n\n```\n\n## How Do We Draw PSA Values?\n\n::: incremental\n-   Central limit tells us that distribution for many estimated parameters is normal.\n-   However, often we do not rely on a single parameter estimate, but rather on a range of estimates from the literature.\n-   In any PSA, we want to specify parameter uncertainty in such a way as to capture the overall level of uncertainty in model parameters.\n:::\n\n## How Do We Draw PSA Values?\n\n| Parameter Type                  | Distribution     |\n|---------------------------------|------------------|\n| Probability                     | beta             |\n| Rate                            | gamma            |\n| Utility weight                  | beta             |\n| Right skew (e.g., cost)         | gamma, lognormal |\n| Relative risks or hazard ratios | lognormal        |\n| Odds Ratio                      | logistic         |\n\n## How Do I Draw Values\n\n\nhttps://yuhanxuan.shinyapps.io/shiny4dist/\n\n\n\n<!-- ## How Do We Draw PSA Values? -->\n\n<!-- ::: r-stack -->\n<!-- ![](media/r_HS.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/r_HD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtB.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtC.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtE.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/u_H.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/u_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtA.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtB.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtC.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtE.png){.fragment height=\"500px\"} -->\n<!-- ::: -->\n\n<!-- ## How Do We Draw PSA Values -->\n\n<!-- ::: incremental -->\n<!-- -   All the model parameters have different uncertainty distributions. How do we draw values? -->\n<!-- -   **Inverse Transform Method** -->\n<!-- -   Idea: randomly sample from quantiles in the distribution. -->\n<!-- ::: -->\n\n<!-- ## How Do We Draw PSA Values -->\n\n<!-- ::: incremental -->\n<!-- -   Requires drawing a random number between 0 and 1 (the quantile) -->\n<!-- -   Requires an *inverse cumulative density function* -->\n<!-- -   You can do this in Excel! -->\n<!-- ::: -->\n\n<!-- ## Normal Distribution: PDF -->\n\n<!-- ![](media/pdf-to-cdf-norm.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Normal Distribution: CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm4.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Normal Distribution: PDF to CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm.gif){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n<!-- anim_norm -->\n<!-- ``` -->\n\n<!-- ## Normal Distribution: CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm4.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Drawing from an Arbitrary PSA Distribution -->\n\n<!-- 1.  Draw a random number between 0 and 1 (`RAND()`) -->\n<!-- 2.  Feed this number through the quantile function (\"inverse cumulative density function\") for the specified distribution. -->\n<!-- 3.  Repeat as many times as needed for the PSA (e.g., 1,000 times) -->\n\n## Constructing a PSA Sample\n\nFor a given iteration $j$\n\n1.  Draw separate PSA values from the uncertainty distributions in your model.\n2.  Run the model and calculate model outputs (e.g., total costs and QALYs for each strategy).\n3.  Record the PSA parameter values and the outcome results in a table.\n4.  Repeat 1-3 many times.\n\n## Common PSA Distributions in Amua\n\n| Parameter Type                  | Distribution     | Amua                      |\n|---------------------------------|------------------|---------------------------|\n| Probability                     | beta             | Beta(shape1,shape2,\\~)    |\n| Rate                            | gamma            | Gamma(shape, scale, \\~)   |\n| Utility weight                  | beta             | Beta(shape1,shape2,\\~)    |\n| Right skew (e.g., cost)         | gamma, lognormal | LogNorm(shape,scale,\\~)   |\n| Relative risks or hazard ratios | lognormal        | LogNorm(shape,scale,\\~)   |\n| Odds Ratio                      | logistic         | Logistic(location, scale) |\n\n## Exmample: Uncertainty in Utility Weight\n\n- Base case value: 0.95\n- Sample from `Beta(95,5,~)`\n- Alternatively, sample from `Beta(950,50,~)`\n\n## Exmample: Uncertainty in Utility Weight\n\n```{r, echo = FALSE}\n#| fig-width: 8\n#| fig-height: 5\n#| fig-align: center\np = tibble(samp1 = rbeta(95,5,n=1e4), samp2 = rbeta(950,50,n=1e4)) %>% \n  mutate(index = row_number()) %>% \n  gather(samp,value,-index) %>% \n  mutate(samp = case_when(samp == \"samp1\" ~ \"Beta(95,5,~)\", \n                          samp == \"samp2\" ~ \"Beta(950,50,~\")) %>% \n  ggplot() + geom_density(aes(group = samp, x = value, colour =samp)) + \n  hrbrthemes::theme_ipsum() + ggsci::scale_colour_d3() + \n  labs(title = \"Utility Weight Uncertainty\", x = \"Utility Weight Value\", y = \"Density\") + \n  geom_vline(aes(xintercept = 0.95))\n\np_labeled <- directlabels::direct.label(p, \"top.points\") + scale_y_continuous(limits = c(0,70))\nprint(p_labeled)\n```\n\n# Interactive Amua Session \n\n# 3. How Do We Summarize PSA Results?\n\n## How Do We Summarize PSA Results?\n\n::: columns\n::: column\n-   Plot costs and QALYs of each iteration to show degree of variation in estimates.\n-   Figure plots values at each iteration, the average across 1,000 iterations (large points) and ellipses that capture \\~95% of points.\n:::\n\n::: column\n```{r}\n#| fig.height=10\nplot.psa(l_psa) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  xlab(\"Effectiveness (QALYs)\") +\n  guides(col = guide_legend(nrow = 2)) +\n  theme(legend.position = \"bottom\")\n```\n:::\n:::\n\n\n## Cost Effectiveness Acceptability Curves\n\n-   CEACs summarize the degree of uncertainty as captured by our PSA.\n\n-   CEAC represents the (Bayesian) probability of each option being cost-effective at different levels of the cost-effectiveness threshold $\\lambda$.\n\n[Source](https://onlinelibrary.wiley.com/doi/full/10.1111/j.1524-4733.2008.00358.x)\n\n## Cost Effectiveness Acceptability Curves\n\n```{r}\nplot.ceac(ceac_obj, frontier=FALSE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n\n```\n\n## Constructing the CEAC\n\n::: columns\n::: column\n1.  Define a WTP value.\n:::\n\n::: column\n$\\lambda = 50000$\n:::\n:::\n\n## Constructing the CEAC\n\n2.  Use the PSA sample to calculate the **Net Monetary Benefit (NMB)** and/or the **Net Health Benefit (NHB)** of each strategy.\n\nNet Monetary Benefit\n\n$$\nTOTQALY * \\lambda - TOTCOST\n$$\n\n$$\nNet Health Benefit $$ TOTQALY - \\frac{TOTCOST}{\\lambda} \\$\\$\n\n## PSA Sample\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\ndf_psa <- \ntibble::tribble(\n  ~totcost_trtA, ~totcost_trtB, ~totcost_trtC, ~totcost_trtD, ~totcost_trtE, ~totqaly_trtA, ~totqaly_trtB, ~totqaly_trtC, ~totqaly_trtD, ~totqaly_trtE,\n    19619.47188,   25588.07151,   37065.37786,   23997.76554,    40797.1777,   18.53716587,   18.61511665,   18.72621501,   18.65291992,   18.65291992,\n    11776.92856,   17379.41979,   36873.01518,   19453.58814,   45567.64775,   17.01051936,    17.1082885,   17.19659669,    17.1353478,    17.1353478,\n    13292.49032,   19268.95151,   33789.88511,    19886.4207,   41933.20163,   17.25143381,   17.35911175,   17.51076684,   17.46195864,   17.46195864,\n    14652.37199,   19102.09981,   25153.62823,   19245.88282,    33977.4242,   16.12758803,   16.13136416,   16.37773559,   16.25371623,   16.25371623,\n    13286.67336,   15912.61046,   26997.83009,   18687.76003,   39152.51988,   15.93832559,   16.03653696,   16.14110603,   16.07599929,   16.07599929,\n    14958.84595,   17505.56022,   32929.45939,   20602.67016,   49327.29579,   16.01576183,   16.08855226,   16.28681468,   16.18276785,   16.18276785\n  ) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) \n\ndf_psa %>% \n  mutate_all(~round(.,4)) %>% \n  kable() %>% \n  kable_styling()\n```\n:::\n\n## Net Monetary Benefit\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nwtp = 50000\ndf_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything())   %>% \n  select(-max) %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE,caption=\"Note: Values shown are for a single value of lambda (50,000/QALY)\") %>% \n  kable_styling()\n```\n:::\n\n## Identify the Optimal Strategy\n\n3.  For each iteration, determine which strategy **maximizes** NMB/NHB.\n\n-   This is the optimal strategy for a given $\\lambda$ value.\n\n## Identify the Optimal Strategy\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nwtp = 50000\ndf_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) %>% \n\n  mutate(\n    NMB_A = cell_spec(NMB_A,\"html\",\n                      color = ifelse(NMB_A==max,\"white\",\"black\"),\n                      background = ifelse(NMB_A==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_A==max,T,F))) %>% \n  mutate(\n    NMB_B = cell_spec(NMB_B,\"html\",\n                      color = ifelse(NMB_B==max,\"white\",\"black\"),\n                      background = ifelse(NMB_B==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_B==max,T,F))) %>% \n  mutate(\n    NMB_C = cell_spec(NMB_C,\"html\",\n                      color = ifelse(NMB_C==max,\"white\",\"black\"),\n                      background = ifelse(NMB_C==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_C==max,T,F))) %>% \n  mutate(\n    NMB_D = cell_spec(NMB_D,\"html\",\n                      color = ifelse(NMB_D==max,\"white\",\"black\"),\n                      background = ifelse(NMB_D==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_D==max,T,F))) %>% \n  mutate(\n    NMB_E = cell_spec(NMB_E,\"html\",\n                      color = ifelse(NMB_E==max,\"white\",\"black\"),\n                      background = ifelse(NMB_E==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_E==max,T,F))) %>%   \n  select(-max) %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## Identify the Optimal Strategy\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nex_ceac_ <- \n  df_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) %>% \n  mutate(NMB_A = ifelse(NMB_A==max,1,0)) %>% \n  mutate(NMB_B = ifelse(NMB_B==max,1,0)) %>% \n  mutate(NMB_C = ifelse(NMB_C==max,1,0)) %>% \n  mutate(NMB_D = ifelse(NMB_D==max,1,0)) %>% \n  mutate(NMB_E = ifelse(NMB_E==max,1,0)) %>% \n  select(-max) \n\nex_ceac <- \n  ex_ceac_ %>% \n  mutate(\n    NMB_A = cell_spec(NMB_A,\"html\",\n                      color = ifelse(NMB_A==1,\"white\",\"black\"),\n                      background = ifelse(NMB_A==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_A==1,T,F))) %>% \n  mutate(\n    NMB_B = cell_spec(NMB_B,\"html\",\n                      color = ifelse(NMB_B==1,\"white\",\"black\"),\n                      background = ifelse(NMB_B==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_B==1,T,F))) %>% \n  mutate(\n    NMB_C = cell_spec(NMB_C,\"html\",\n                      color = ifelse(NMB_C==1,\"white\",\"black\"),\n                      background = ifelse(NMB_C==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_C==1,T,F))) %>% \n  mutate(\n    NMB_D = cell_spec(NMB_D,\"html\",\n                      color = ifelse(NMB_D==1,\"white\",\"black\"),\n                      background = ifelse(NMB_D==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_D==1,T,F))) %>% \n  mutate(\n    NMB_E = cell_spec(NMB_E,\"html\",\n                      color = ifelse(NMB_E==1,\"white\",\"black\"),\n                      background = ifelse(NMB_E==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_E==1,T,F))) %>%   \n  rename(MAX_IS_A = NMB_A,\n         MAX_IS_B = NMB_B,\n         MAX_IS_C = NMB_C,\n         MAX_IS_D = NMB_D,\n         MAX_IS_E = NMB_E) \nex_ceac %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## How Often is the Stratgy the Optimal?\n\n-   The average of this binary indicator across all PSA model runs is the fraction of the time each strategy is optimal *for a given value of* $\\lambda$.\n\n## How Often is the Strategy the Optimal?\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nex_ceac_ %>% \n   rename(MAX_IS_A = NMB_A,\n         MAX_IS_B = NMB_B,\n         MAX_IS_C = NMB_C,\n         MAX_IS_D = NMB_D,\n         MAX_IS_E = NMB_E)  %>% \n  summarise_at(vars(starts_with(\"MAX\")),mean) %>% \n  mutate(lambda = wtp) %>% \n  select(lambda, everything()) %>% \n  kable(digits=4,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## How Often is the Strategy the Optimal?\n\n-   Now repeat this exercise across a range of values for $\\lambda$.\n\n## How Often is the Strategy the Optimal?\n\n::: {style=\"font-size: 0.6em\"}\n```{r}\n\nex_ceac_full <- \n  sort(c(50000,seq(20000,200000,20000))) %>% map(~({\n    ex_ceac_ <- \n    df_psa %>% \n    mutate(NMB_A = totqaly_trtA * .x - totcost_trtA,\n           NMB_B = totqaly_trtB * .x - totcost_trtB,\n           NMB_C = totqaly_trtC * .x - totcost_trtC,\n           NMB_D = totqaly_trtD * .x - totcost_trtD,\n           NMB_E = totqaly_trtE * .x - totcost_trtE) %>% \n    select(starts_with(\"NMB_\")) %>% \n    mutate_all(~round(.,0)) %>% \n    mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n    mutate(PSA_ID = row_number()) %>% \n    select(PSA_ID, everything()) %>% \n    mutate(NMB_A = ifelse(NMB_A==max,1,0)) %>% \n    mutate(NMB_B = ifelse(NMB_B==max,1,0)) %>% \n    mutate(NMB_C = ifelse(NMB_C==max,1,0)) %>% \n    mutate(NMB_D = ifelse(NMB_D==max,1,0)) %>% \n    mutate(NMB_E = ifelse(NMB_E==max,1,0)) %>% \n    select(-max) \n    \n    ex_ceac_ %>% \n     rename(MAX_IS_A = NMB_A,\n           MAX_IS_B = NMB_B,\n           MAX_IS_C = NMB_C,\n           MAX_IS_D = NMB_D,\n           MAX_IS_E = NMB_E)  %>% \n    summarise_at(vars(starts_with(\"MAX\")),mean) %>% \n    mutate(lambda = .x) %>% \n    select(lambda, everything())\n    \n  })) %>% \n    bind_rows()\n\nex_ceac_full %>% \n  kable(digits=4,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n\n```\n:::\n\n## How Often is the Strategy the Optimal?\n\n-   We can now plot these data:\n    -   **x-axis**: $\\lambda$.\n    -   **y-axis**: Fraction/percent of the time each strategy is optimal.\n-   This is the Cost-Effectiveness Acceptability Curve\n\n## Cost Effectiveness Acceptability Curve (CEAC)\n\n```{r}\nplot.ceac(ceac_obj, frontier=FALSE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n# Interactive Amua Session \n\n## What Does the CEAC Tell Us?\n\n-   Fenwick et al. (2001) the probability of being cost-effective cannot be used to determine the optimal option.\n\n-   If the objective is to maximize health gain, decisions should be made based on *expected* net benefit, regardless of the uncertainty associated with the decision.\n\n## Cost Effectiveness Acceptability Frontier\n\n-   Layer you can add to the CEAC.\n-   Shows the probability that the optimal option is cost-effective at different $\\lambda$ values.\n-   The CEAF is not necessarily the top \"envelope\" or region of the CEAC!\n\n## Cost Effectiveness Acceptability Frontier\n\n```{r}\nplot.ceac(ceac_obj, frontier=TRUE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n1.  Determine average costs and QALY for each strategy across *all* PSA iterations.\n2.  Calculate NMB/NHB based on these averages.\n3.  Determine optimal strategy based on the strategy that maximizes NMB/NHB.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n4.  Repeat for a range of values of $\\lambda$.\n5.  For each strategy find the range of values of $\\lambda$ for which that strategy is optimal.\n\n-   This determines the \"switch points\" of the CEAF.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n6.  The lowest value of $\\lambda$ for which a given strategy is optimal is $\\approx$ ICER for that strategy.\n\n7.  The highest value of $\\lambda$ for which a given strategy is optimal is the ICER for the next most costly option.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n```{r}\nplot.ceac(ceac_obj, frontier=TRUE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n## Expected Value of Perfect Information\n\nRecall the two questions from the beginning of this talk:\n\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n2.  Should we invest more resources to reduce uncertainty in our decisions?\n\n## Expected Value of Perfect Information\n\n-   CEAC and CEAF provide information on the degree to which uncertainty informs question 1.\n\n-   These plots can help give us a sense of whether more research to reduce uncertainty may be valuable (Question 2).\n\n-   **Value of Information** analyses provide a more concrete answer to Question 2.\n\n## Expected Value of Perfect Information {.smaller}\n\n::: columns\n::: column\n::: incremental\n-   We will not cover VOI methods in detail here, but short courses are available.\n-   Figure shows an instance where model is sensitive to uncertainty, but decisions are not.\n-   It's not really worth pursuing additional research because we make the same decision regardless of the parameter values.\n:::\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n![](images/paste-BB09C5B7.png)\n:::\n:::\n:::\n\n## Expected Value of Perfect Information {.smaller}\n\n::: columns\n::: column\n::: incremental\n-   If **decisions** are sensitive to uncertainty, then the value of information is high.\n-   It may be worth pursuing additional research to reduce model parameter uncertainty.\n:::\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n![](images/paste-0B14886B.png)\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n-   You can use VOI methods with your PSA sample to rank-order parameters in terms of their importance in informing **decision uncertainty**.\n\n-   Next slides briefly show you how to construct one VOI measure: the **expected value of perfect information**.\n\n## Expected Value of Perfect Information\n\n-   Idea: What is the value of reducing **all** uncertainty in the model?\n-   Provides a rough sense of whether additional research should be pursued.\n-   A related concept, the **expected value of partial perfect information,** can be constructed to tell us *which parameters* (or sets of parameters) we should focus on.\n\n## Expected Value of Perfect Information\n\n-   The \"ingredients\" for calculating the EVPI for a given $\\lambda$ value are all in the CEAC and CEAF inputs.\n\n## Expected Value of Perfect Information\n\n::: incremental\n1.  Determine the *overall* optimal strategy based on NMB as determined by average costs and QALYs across *all* PSA model runs.\n\n-   Call this strategy $s^*$ (e.g., $s^*=D$)\n-   NMB for this strategy is $\\overline{NMB}(s^*)$.\n:::\n\n## Expected Value of Perfect Information\n\n::: incremental\n2.  In each PSA iteration, find the optimal strategy based on the NMB for each strategy *in that particular iteration*.\n\n-   Call this strategy $s_m$ (e.g., $s_m=B$)\n-   NMB for this strategy is $NMB_m(s_m)$.\n:::\n\n## Expected Value of Perfect Information\n\n-   Now let's think about the economic consequences of $\\overline{NMB}(s^*)$ and $NMB_m(s_m)$\n\n## Expected Value of Perfect Information\n\n-   On average, we would select strategy $s^*$ because it results in the highest expected health gain (i.e., it maximizes $\\overline{NMB}(s^*)$).\n\n-   But what if that decision is wrong?\n\n## Expected Value of Perfect Information\n\n-   The difference between $NMB_m(s_m)$ and $\\overline{NMB}(s^*)$ for any PSA iteration provides an estimate of the **opportunity cost** of making the wrong decision.\n\n-   If $s_m=s^*$, then $s_m - s^* = 0$.\n\n    -   There is no opportunity cost of making the wrong decision!\n\n## Expected Value of Perfect Information\n\n-   The difference between $NMB_m(s_m)$ and $\\overline{NMB}(s^*)$ for any PSA iteration provides an estimate of the **opportunity cost** of making the wrong decision.\n\n-   If $s_m>s^*$, then $s_m - s^* > 0$.\n\n    -   There is an opportunity cost to making the wrong decision.\n\n## Expected Value of Perfect Information\n\n-   The average value of $s_m - s^*$ in our PSA sample is the **expected value of perfect information (EVPI)**\n\n-   It summarizes the degree to which there is an oportunity cost to making the wrong decision in our model.\n\n## Expected Value of Perfect Information\n\n-   Just as we did with the CEAC and CEAF, you can calculate an EVPI value for various $\\lambda$ and construct a EVPI curve.\n\n## Expected Value of Perfect Information\n\n```{r}\nplot.evpi(evpi)\n```\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   At $\\lambda$=\\$100,000/QALY, there is **high** value of information.\n-   Our decision to implement one strategy over another is sensitive to uncertainty in our model.\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n```{r}\nplot.evpi(evpi)\n```\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   Note that our ICER for strategy C is very close to \\$100,000.\n-   At a decision threshold of $\\lambda$ = \\$100,000/QALY, different values for model parameters could result in adoption (i.e., ICER \\< $\\lambda$) or nonadoption of strategy C.\n:::\n\n::: column\n::: {style=\"font-size: 0.8em\"}\n```{r}\nrownames(df_cea) <- NULL\ndf_cea %>% \n  select(Strategy,Cost, Effect, ICER, Status) %>% \n  kable(digits = 3) %>% \n  kable_styling()\n```\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   At $\\lambda$=\\$10,000/QALY, there is **low** value of information.\n-   Our decision to implement one strategy over another is **not** sensitive to uncertainty in our model.\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n```{r}\nplot.evpi(evpi)\n```\n:::\n:::\n:::\n\n# Interactive Amua Session \n\n<!-- ## Sampling Parameters -->\n\n<!-- ```{r, eval = FALSE} -->\n\n<!-- #| echo: false -->\n\n<!-- #| message: false -->\n\n<!-- #| warning: false -->\n\n<!-- library(randtoolbox) -->\n\n<!-- library(gganimate) -->\n\n<!-- library(ggthemes) -->\n\n<!-- N = 1000 -->\n\n<!-- int = 0.05 -->\n\n<!-- get_mc <- function(N) { -->\n\n<!--   data.frame(X1 = runif(N), -->\n\n<!--              X2= runif(N)) %>%  -->\n\n<!--   as_tibble() -->\n\n<!-- } -->\n\n<!-- get_hs <- function(N) { -->\n\n<!--   halton(N,dim=2) %>%  -->\n\n<!--   data.frame() %>%  -->\n\n<!--   as_tibble() -->\n\n<!-- } -->\n\n<!-- get_coverage <- function(df_, int) { -->\n\n<!--   df_ %>%  -->\n\n<!--     mutate(X1_r = plyr::round_any(X1,int,ceiling), -->\n\n<!--          X2_r = plyr::round_any(X2,int,ceiling)) %>%  -->\n\n<!--   select(X1_r,X2_r) %>%  -->\n\n<!--   mutate(n=1) %>%   -->\n\n<!--   right_join( -->\n\n<!--     crossing(X1_r = seq(0,1,int), X2_r = seq(0,1,int)) , c(\"X1_r\",\"X2_r\") -->\n\n<!--   ) %>%  -->\n\n<!--   mutate(n = ifelse(is.na(n),0,n)) %>%  -->\n\n<!--   arrange(X1_r, X2_r) %>%  -->\n\n<!--   ungroup() %>%  -->\n\n<!--   summarise(n = mean(n)) %>%  -->\n\n<!--   pull(n) -->\n\n<!-- } -->\n\n<!-- get_mc(N=1000) %>% get_coverage(int=0.03) -->\n\n<!-- get_hs(N=1000) %>% get_coverage(int=0.03) -->\n\n<!-- get_hs(N=10)  %>%  -->\n\n<!--   mutate(iteration = row_number()) %>%  -->\n\n<!--   mutate(end = 100) %>%  -->\n\n<!--   ggplot(aes(x = X1, y = X2)) +  -->\n\n<!--   geom_point() +  -->\n\n<!--   theme_bw() +  -->\n\n<!--   transition_events(start = iteration, end = end) -->\n\n<!-- data <- data.frame( -->\n\n<!--   x = 1:10, -->\n\n<!--   y = runif(10), -->\n\n<!--   begin = runif(10, 1, 100), -->\n\n<!--   length = 1000, -->\n\n<!--   enter = 100, -->\n\n<!--   exit = 100 -->\n\n<!-- ) -->\n\n<!-- N = 75 -->\n\n<!-- set.seed(123) -->\n\n<!-- anim_mc <- get_mc(N) %>%  -->\n\n<!--   mutate( -->\n\n<!--     begin = runif(N, 1, N*10), -->\n\n<!--     length = 200, -->\n\n<!--     enter = runif(N,1,N), -->\n\n<!--     exit = 1000 -->\n\n<!--   ) %>%  -->\n\n<!--   ggplot( aes(x=X1, y=X2)) + -->\n\n<!--   geom_point(size = 2) + -->\n\n<!--   labs(x = \"Parameter 1\", -->\n\n<!--        y = \"Parameter 2\") + -->\n\n<!--   theme_bw() + -->\n\n<!--   transition_events(start = begin, -->\n\n<!--                     end = begin + length, -->\n\n<!--                     enter_length = enter, -->\n\n<!--                     exit_length = exit) + -->\n\n<!--  enter_grow()  -->\n\n<!-- anim_save(\"lectures/media/lec_psa/animated-monte-carlo.gif\", anim_mc) -->\n\n<!-- set.seed(123)   -->\n\n<!-- anim_hs <-  -->\n\n<!--   get_hs(N) %>%  -->\n\n<!--   mutate( -->\n\n<!--     begin = runif(N, 1, N*10), -->\n\n<!--     length = 200, -->\n\n<!--     enter = runif(N,1,N), -->\n\n<!--     exit = 1000 -->\n\n<!--   ) %>%  -->\n\n<!--   ggplot( aes(x=X1, y=X2)) + -->\n\n<!--   geom_point(size = 2) + -->\n\n<!--   labs(x = \"Parameter 1\", -->\n\n<!--        y = \"Parameter 2\") + -->\n\n<!--   theme_bw() + -->\n\n<!--   transition_events(start = begin, -->\n\n<!--                     end = begin + length, -->\n\n<!--                     enter_length = enter, -->\n\n<!--                     exit_length = exit) + -->\n\n<!--  enter_grow()  -->\n\n<!-- anim_save(\"lectures/media/lec_psa/animated-halton.gif\", anim_hs) -->\n\n<!-- ``` -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ![Monte Carlo Draws](media/lec_psa/animated-monte-carlo.gif){fig-align=\"center\" layout-valign=\"center\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ![Halton Sequence](media/lec_psa/animated-halton.gif){fig-align=\"center\" layout-valign=\"center\"} -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- test -->\n","srcMarkdownNoYaml":"\n\n# Learning Objectives and Outline\n\n## Learning Objectives\n\n::: incremental\n1.  Discuss common sources of uncertainty in decision models.\n2.  Explain how to draw parameter values from an uncertainty distribution.\n3.  Understand inputs and outputs of a PSA\n4.  Characterize decision uncertainty using cost-effectiveness acceptability curves and frontiers.\n:::\n\n## Lecture Outline\n\n::: incremental\n1.  Why Do We Study Uncertainty in a Decision Model?\n2.  How Do We Conduct a Probabilistic Sensitivity Analysis?\n3.  How Do We Summarize PSA Results?\n:::\n\n# 1. Why Do We Study Uncertainty in a Decision Model?\n\n## Two Fundamental Questions of Decision Analysis\n\n::: incremental\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n:::\n\n## Two Fundamental Questions of Decision Analysis\n\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n\n::: incremental\n-   Model outcomes (e.g., ICERs) will be sensitive to all sources of uncertainty.\n-   **Key Question**: Does this sensitivity *change decisions*?\n:::\n\n## Two Fundamental Questions of Decision Analysis\n\n2.  Should we invest more resources to reduce uncertainty in our decisions?\n\n## Role of Probabilistic Sensitivity Analysis in a Decision Model\n\n::: incremental\n-   Quantify the degree of decision uncertainty in our model.\n-   Is it worth pursuing additional research to reduce uncertainty?\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n::: incremental\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n\n-   Each patient will have a different \"experience\" in the model, which will create variation in model outputs (e.g., total costs, QALYS) both *within* the model and *across* different model runs.\n-   Not relevant for Markov cohort models because those models are **deterministic**---they capture the average experience of a population, and do not simulate individual patient trajectories within that population.\n-   Relevant source of uncertainty for discrete event simulation and microsimulation models.\n-   Can often be minimized via modeling choices (i.e., simulate a lot of patients!)\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n\n::: incremental\n2.  **Second-order**: Uncertainty in the \"true\" value of underlying parameters.\n\n-   Model parameters are often estimated with uncertainty (e.g., 95% confidence interval)\n-   You may have assumed or calibrated parameters not rooted in a published research study; there is uncertainty involved in these processes, too!\n:::\n\n## Different Types of Uncertainty {.smaller}\n\n1.  **First-order**: Stochastic uncertainty from simulating individual patients.\n2.  **Second-order**: Uncertainty in the \"true\" value of underlying parameters.\n\n::: incremental\n3.  **Model structure uncertainty**: Different choices on how to construct the structure of your model will result in different outcome estimates.\n\n-   Different choices for cycle correction (e.g., half-cycle, Simpson's 1/3, etc.)\n-   Different choices for how to construct transition probability matrices (e.g., rate-to-probability conversion formulas vs. embedding via Matrix exponentiation)\n:::\n\n## Heterogeneity vs. Uncertainty\n\n-   Uncertainty: variation in model outputs due to stochastic experiences of patients, sensitivity to input parameter values, etc.\n-   Heterogeneity: variation in model outputs due to differences in patient characteristics.\n\n## Heterogeneity vs. Uncertainty\n\n![](images/paste-E8F213DC.png)\n\nSource: [Briggs et al., \"Model Parameter Estimation and Uncertainty: A Report of the ISPOR-SMDM Modeling Good Research Practices Task Force-6\"](https://www.ispor.org/docs/default-source/resources/outcomes-research-guidelines-index/model_parameter_estimation_and_uncertainty-6.pdf?sfvrsn=8bc10c8e_0)\n\n## When Does Uncertainty Matter?\n\n```{r}\n#| eval: false\n#| warning: false\n#| message: false \nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(gganimate)\nlibrary(patchwork)\n\ndf <- tibble(x = -1, y = 1 , scenario = 1, colour = \"red\")\ndf_2 <- tibble(x = rnorm(n = 200, mean = -1, sd=0.2), \n              y = rnorm(n=200, mean=1, sd=0.1),\n              scenario = 2) %>% \n  mutate(colour = ifelse(x<=0,\"red\",\"blue\")) %>% \n  mutate(seq = row_number())\ndf_3 <- tibble(x = pmin(2,pmax(-2,rnorm(n = 200, mean = -.5, sd=1))), \n              y = pmax(-2,pmin(2,rnorm(n=200, mean=1, sd=0.1))),\n              scenario = 3) %>% \n  mutate(colour = ifelse(x<=0,\"red\",\"blue\")) %>% \n  mutate(seq = row_number())\n\n\np0 <- \ndf %>% \n  ggplot(aes(x = y , y = x)) + geom_point(aes(colour = colour),size=3) +\n  theme_tufte() + \n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank()) + \n  geom_errorbar(aes(ymin = x-1, ymax=x+1, x=y-.5, width =0.2)) +\n  geom_errorbar(aes(ymin = x+1, ymax=x+3, x=y-.5, width =0.2)) +\n  coord_flip() +\n  scale_x_continuous(limits = c(-4,4)) +\n  scale_y_continuous(limits = c(-4, 4), breaks = c(-1,1)) +\n  theme(legend.position = \"none\")\n\ntmp_0  <- p0 +   annotate(\"text\",x = 0,y=-1,label=\"Base Case\\nDecision\",size=5) +\n   annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n    scale_colour_manual(values = c(\"red\"))\ntmp_0 \nggsave(here::here(\"lectures/media/uncertainty-decision-base.png\"),width=10, height=8)\n\n\np0 + geom_point(data = df_2 %>% filter(row_number()==1), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n    scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-1.png\"),width=10, height=8)\n\np0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:2), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5)+\n   scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-2.png\"),width=10, height=8)\n \n p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n    scale_colour_manual(values = c(\"red\"))\nggsave(here::here(\"lectures/media/uncertainty-decision-base-3.png\"),width=10, height=8)\n\nuncert0_anim <- p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  geom_point(data = df_2 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n   scale_colour_manual(values = c(\"red\")) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n  transition_states(seq, state_length = 0); \ntmp <- animate(uncert0_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer())\nanim_save(here::here(\"lectures/media/uncertainty-decision-psa-1.gif\"), tmp)\n\ntmp_ <- p0 + geom_point(data = df_2, alpha = 0.1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) +\n   scale_colour_manual(values = c(\"red\"))\ntmp_ \nggsave(here::here(\"lectures/media/uncertainty-decision-psa-1.png\"),width=10, height=8)\n\n# uncert1_anim <- p0 + geom_point(data = df_2 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n#   geom_point(data = df_2 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n#   annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n#   annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n#   transition_states(seq, state_length = 0); \n# tmp <- animate(uncert0_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer())\n# anim_save(here::here(\"lectures/media/uncertainty-decision-psa-1.gif\"), tmp)\n\n\nuncert2_anim <- p0 + geom_point(data = df_3 %>% filter(row_number() %in% 1:3), alpha = 1,aes(colour = colour)) +\n  geom_point(data = df_3 %>% filter(row_number() %in% 3:100) , alpha = 1,aes(colour = colour)) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) + \n  transition_states(seq, state_length = 0) + \n  scale_colour_manual(values = c(\"blue\",\"red\"))\ntmp <- animate(uncert2_anim, duration = 10, fps = length(3:100)/10, renderer = gifski_renderer()) \nanim_save(here::here(\"lectures/media/uncertainty-decision-psa-2.gif\"), tmp)\n\n  \ntmp_2 <- p0 +   geom_point(data = df_3, alpha=0.1, aes(colour = colour)) +\n  scale_colour_manual(values = c(\"blue\",\"red\")) +\n  annotate(\"text\",x = 0,y=-1,label=\"Decision is Same\\nAs Base Case\",size=5) +\n  annotate(\"text\",x = 0,y=1,label=\"Alternative\\nDecision\",size=5) \ntmp_2 \nggsave(here::here(\"lectures/media/uncertainty-decision-psa-2.png\"),width=10, height=8)\n\n\n\n```\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-1.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-2.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\n![](media/uncertainty-decision-base-3.png){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nIn this example, model outputs are sensitive to uncertainty, but **decisions are not**.\n\n![](media/uncertainty-decision-psa-1.gif){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nIn this example, model outputs are sensitive to uncertainty, but **decisions are not**.\n\n![](media/uncertainty-decision-psa-1.png){height=\"600px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nBoth model **outputs** *and* **decisions** are sensitive to uncertainty.\n\n![](media/uncertainty-decision-psa-2.gif){height=\"800px\" fig-align=\"center\"}\n\n## When Does Uncertainty Matter?\n\nBoth model **outputs** *and* **decisions** are sensitive to uncertainty.\n\n![](media/uncertainty-decision-psa-2.png){height=\"600px\" fig-align=\"center\"}\n\n## Markov Cohort Models\n\n![](media/uncertainty-decision-markov.png){height=\"500px\" fig-align=\"center\"}\n\n::: footer\nNote that this picture represents common scenarios; uncertainty may be greater or lesser in any particular modeling context.\n:::\n\n## DES and Microsimulation\n\n![](media/uncertainty-decision-des.png){height=\"500px\" fig-align=\"center\"}\n\n::: footer\nNote that this picture represents common scenarios; uncertainty may be greater or lesser in any particular modeling context. DES = discrete event simulation\n:::\n\n```{r}\nsource(here::here(\"_healthy-sick-dead/01-healthy-sick-dead_setup.r\"))\nsource(here('_healthy-sick-dead/functions_healthy-sick-dead.r'))\n```\n\n```{r, cache=TRUE}\nrun_psa = TRUE\noptions(knitr.kable.NA = '')\n\n\nsource(here(\"_healthy-sick-dead/02_healthy-sick-dead_process-parameters.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/03_healthy-sick-dead_process-parameters_psa.r\"))\nsource(here(\"_healthy-sick-dead/04_healthy-sick-dead_discounting-and-cycle-adjustments.r\"))\nsource(here(\"_healthy-sick-dead/05_healthy-sick-dead_construct-transition-probability-matrices.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/05b_healthy-sick-dead_construct-transition-probability-matrices-psa.r\"))\nsource(here(\"_healthy-sick-dead/06_healthy-sick-dead_process-payoffs.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/06b_healthy-sick-dead_process-payoffs-psa.r\"))\nsource(here(\"_healthy-sick-dead/07_healthy-sick-dead_calculate-markov-trace.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/07b_healthy-sick-dead_calculate-markov-trace-psa.r\"))\nsource(here(\"_healthy-sick-dead/08_healthy-sick-dead_cea-results-base-case.r\"))\nif (run_psa) source(here(\"_healthy-sick-dead/08b_healthy-sick-dead_cea-results-psa.r\"))\n\n```\n\n## Probabilistic Sensitivity Analysis\n\n![](media/uncertainty-decision-psa.png){height=\"150px\" fig-align=\"center\"}\n\n# 2. How Do We Conduct Probabilistic Sensitivity Analyses? {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\" background-opacity=\"0.1\"}\n\n## Idea {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\" background-opacity=\"0.1\"}\n\n::: incremental\n-   Run the model many times, each time drawing a given parameter value from its uncertainty distribution.\n-   Collect the parameter values and model outputs (e.g., total costs and QALYs) in a **probabilistic sensitivity analysis (PSA)** dataset.\n-   Analyze the PSA results to construct uncertainty estimates for ICERs, NMB/NHB, etc.\n-   PSA results can also be used for **value of information** that quantify decision uncertainty and the value of future research to reduce uncertainty.\n:::\n\n##  {background-image=\"media/psa-distribution-plot.png\" data-background-size=\"contain\"}\n\n```{r ucertfig, eval = FALSE}\n\n  # params_psa %>% \n  #   bind_cols() %>% \n  #   mutate(i = row_number()) %>% \n  #   gather(parameter, value,-i) %>% \n  #   group_by(parameter)  %>% \n  #   summarise(mean_psa=mean(value)) %>% \n  #   left_join(params %>% bind_cols() %>% gather(parameter,base_case),\"parameter\") %>% \n  #   mutate(diff = abs((mean_psa - base_case)/base_case)) %>% \n  #   arrange(desc(diff)) %>% \n  #   knitr::kable() %>% kableExtra::kable_styling()\n\n  params_psa %>% \n    bind_cols() %>% \n    mutate(i = row_number()) %>% \n    gather(parameter, value,-i) %>% \n    group_by(parameter) %>% \n    nest() %>% \n    mutate(density = map(data,~(\n      {.x %>% ggplot(aes(x=value)) + geom_density()} %>% ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>% \n        select(x,y) %>% as_tibble() %>% mutate(nrow = nrow(.))\n    ))) %>% \n    select(-data) %>% \n    unnest(cols = density) %>% \n    \n    ungroup() %>% \n    filter(!grepl(\"^n_|^d_\",parameter)) %>% \n    left_join(params %>% bind_cols() %>% gather(parameter,base_case),\"parameter\") %>%  \n    left_join({params_psa %>% \n        bind_cols() %>% \n        mutate(i = row_number()) %>% \n        gather(parameter, value,-i) %>% \n        group_by(parameter)  %>% \n        summarise(mean_psa=mean(value))},\"parameter\") %>% \n    ggplot(aes(x = x, y = y)) + geom_line() + \n    facet_wrap(~parameter,scales=\"free\")  +\n    geom_vline(aes(xintercept=base_case), colour = \"black\",lwd=2) +\n    ggthemes::theme_clean() + \n    scale_x_continuous(guide = guide_axis(n.dodge=3)) + \n    labs(x = \"\", y = \"\")\n  \n  ggsave(here::here(\"lectures/media/psa-distribution-plot.png\"),width=10,height=8)\n  \n```\n\n```{r animpdf, eval=FALSE}\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(gganimate)\nset.seed(12)\ndf_norm <- tibble(x=rnorm(10000,mean = 10, sd=3))\ndf_lnorm <- tibble(x = rlnorm(10000,mean=log(3),sd=0.01)); plot(density(df_lnorm$x))\ndf_gamma <- tibble(x = rgamma(10000,shape = 44.4, scale=22.5)); plot(density(df_gamma$x))\ndf_unif <- tibble(x = runif(1e6,min = 0.3,max=0.4)); plot(density(df_unif$x))\n\nanimate_pdf_to_cdf <- function(df, scene_to_show = NULL, q_ = c(0.01,  0.25, 0.5, 0.75,  0.99), breaks_to_show = NULL ) {\n  pdf <-\n    {df %>% ggplot(aes(x = x)) + geom_density()} %>%\n    ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>%\n    as_tibble() %>%\n    select(x,y) %>%\n    data.table(key = \"x\")\n  cdf <-\n    {df %>% ggplot(aes(x = x)) + stat_ecdf()} %>%\n    ggplot_build() %>% pluck(\"data\") %>% pluck(1) %>%\n    as_tibble() %>%\n    select(x,y) %>%\n    data.table(key = \"y\")\n\n  \n  q <- q_ %>%\n    map_dbl(~{\n      quantile(df$x,.x)\n    }) %>%\n    set_names(q_) %>%\n    data.frame() %>%\n    set_names(\"x_\") %>%\n    rownames_to_column(var = \"quantile\") %>%\n    as.data.table(key = \"x_\")\n\n  scene2 <-\n    pdf[q,roll=\"nearest\"] %>%\n    as_tibble() %>%\n    select(y,quantile) %>%\n    right_join(pdf,c(\"y\")) %>%\n    arrange(x,y) %>%\n    mutate(scene = 2) %>%\n    mutate(quantile = glue::glue(\"{as.numeric(quantile)}\"))\n\n  q2 <-\n    q %>%\n    as_tibble() %>%\n    mutate(quantile = as.numeric(quantile)) %>%\n    data.table(key=\"quantile\")\n\n  scene3 <-\n    cdf[q2,roll=\"nearest\"] %>%\n    as_tibble() %>%\n    set_names(c(\"x\",\"quantile\",\"x_\")) %>%\n    select(-x_) %>%\n    right_join(cdf,\"x\") %>%\n    arrange(x,y)  %>%\n    mutate(scene = 3) %>%\n    mutate(quantile = glue::glue(\"{as.numeric(quantile)}\")) %>%\n    ungroup() %>%\n    filter(!is.na(as.numeric(quantile)) | row_number() %in% sample(1:nrow(.),1000)); dim(scene2)\n\n  p_df <-\n    scene2 %>%\n    mutate(scene = 1) %>%\n    bind_rows(scene2) %>%\n    bind_rows(scene3) %>%\n    bind_rows(scene3 %>% mutate(scene=4)) %>%\n    #bind_rows(scene3 %>% mutate(scene=5)) %>%\n    #bind_rows(scene3 %>% mutate(scene=6)) %>%\n    mutate(quantile = ifelse(quantile==\"NA\",NA, quantile))\n\n  p_df_label =\n    p_df %>% filter(!is.na(quantile)) %>%\n    mutate(y = ifelse(scene==1,0,y)) %>%\n    mutate(x = ifelse(scene==4,min(scene3$x),x)) %>%\n    mutate(y = ifelse(scene==6,0,y)) %>%\n    mutate(quantile = glue::glue(\" q{quantile}\"))\n\n  if (!is.null(scene_to_show)) {\n    p_df <- \n      p_df %>% filter(scene==scene_to_show)\n    p_df_label <- \n      p_df_label %>% filter(scene==scene_to_show)\n    p <-\n      p_df %>% ggplot(aes(x = x, y = y))+ geom_line() + geom_text(data = p_df_label , aes(label = quantile, group= quantile),size=3)+\n      scale_y_continuous(breaks = breaks_to_show) +\n      scale_x_continuous(breaks = q$x_, labels = round(q$x_,2),guide = guide_axis(n.dodge=3)) +\n      ggthemes::theme_clean(base_size=15) +\n      labs(x = \"Parameter Value\", y = \"\") \n  } else {\n      p <-\n        p_df %>% ggplot(aes(x = x, y = y))+ geom_line() + geom_text(data = p_df_label , aes(label = quantile, group= quantile))+\n        scale_y_continuous(breaks = seq(0,1,0.1)) +\n        scale_x_continuous(breaks = q$x_, labels = round(q$x_,2)) +\n        ggthemes::theme_clean() +\n        labs(x = \"Parameter Value\", y = \"\") + #facet_wrap(~scene, scales=\"free\"); p\n        gganimate::transition_states(scene) + gganimate::view_follow()\n  }\n\n  return(p)\n\n}\n\ndf_norm %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-norm.png\"),height=4, width=5)\ndf_norm %>% animate_pdf_to_cdf(scene = 3,seq(0,1,0.1)) \nggsave(here::here(\"lectures/media/pdf-to-cdf-norm4.png\"),height=4, width=5)\nset.seed(23)\ndf_norm %>% animate_pdf_to_cdf(scene = 3, q = round(runif(5, min = 0, max = 1),3))\nggsave(here::here(\"lectures/media/pdf-to-cdf-norm_random1.png\"),height=4, width=5)\nanim_norm <- df_norm %>% animate_pdf_to_cdf(breaks_to_show = seq(0,1,0.1))\nanim_save(here::here(\"lectures/media/pdf-to-cdf-norm.gif\"), anim_norm)\n\nanim_gamma1 <- df_gamma %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-gamma.png\"),height=5, width=5)\nanim_gamma3 <- df_gamma %>% animate_pdf_to_cdf(scene = 4)\nggsave(here::here(\"lectures/media/pdf-to-cdf-gamma4.png\"),height=5, width=5)\nanim_gamma <- df_gamma %>% animate_pdf_to_cdf()\nanim_save(here::here(\"lectures/media/pdf-to-cdf-gamma.gif\"), anim_gamma)\n\nanim_lnorm1 <- df_lnorm %>% animate_pdf_to_cdf(scene = 2)\nggsave(here::here(\"lectures/media/pdf-to-cdf-lnorm.png\"),height=5, width=5)\nanim_lnorm3 <- df_lnorm %>% animate_pdf_to_cdf(scene = 4)\nggsave(here::here(\"lectures/media/pdf-to-cdf-lnorm4.png\"),height=5, width=5)\nanim_lnorm <- df_lnorm %>% animate_pdf_to_cdf()\nanim_save(here::here(\"lectures/media/pdf-to-cdf-lnorm.gif\"), anim_lnorm)\n\nset.seed(123)\nr_HS = \ttibble(x = rgamma(1e4,shape = 30,rate = 200),param=\"r_HS\")\nr_HD\t= tibble(x = rgamma(1e4,shape = 60, rate = 10000),param = \"r_HD\")\nhr_S = \ttibble(x = rlnorm(1e4,log(3), sdlog = 0.01),param = \"hr_S\")\nhr_HS_trtB\t= tibble(x=rlnorm(1e4,log(0.96), sdlog = 0.02),param = \"hr_HS_trtB\")\nhr_HS_trtC\t= tibble(x=rlnorm(1e4,log(0.9), sdlog = 0.02),param = \"hr_HS_trtC\")\nhr_HS_trtD = \ttibble(x=rlnorm(1e4,log(0.92), sdlog = 0.02),param = \"hr_HS_trtD\")\nhr_HS_trtE = \ttibble(x=rlnorm(1e4,log(0.92), sdlog = 0.02), param = \"hr_HS_trtE\")\nu_H\t= tibble(x=rbeta(1e4,shape1 = 200, shape2 = 3), param = \"u_H\")\nu_S\t= tibble(x=rbeta(1e4,shape1 = 130, shape2 = 45), param = \"u_S\")\nc_S\t = tibble(x=rgamma(1e4,shape = 44.4, scale = 22.5), param = \"c_S\")\nc_trtA\t=tibble(x= rgamma(1e4,shape = 12.5, scale = 2), param = \"c_trtA\")\nc_trtB\t=tibble(x= rgamma(1e4,shape = 12, scale = 83.3), param = \"c_trtB\")\nc_trtC\t=tibble(x= rgamma(1e4,shape = 36.144, scale = 83), param = \"c_trtC\")\nc_trtD\t=tibble(x= rgamma(1e4,shape = 14.458, scale = 83), param = \"c_trtD\")\nc_trtE\t=tibble(x= rgamma(1e4,shape = 60.24, scale = 83), param = \"c_trtE\")\n\n\nparams_lut <- c(\"r_HS = gamma(shape = 30,rate = 200)\", \"r_HD = gamma(shape = 60, rate = 10000)\", \"hr_S = lognormal(meanlog = log(3), sdlog = 0.01)\", \"hr_HS_trtB = lognormal(meanlog = log(0.96), sdlog = 0.02)\", \"hr_HS_trtC = lognormal(meanlog = log(0.88), sdlog = 0.02)\", \"hr_HS_trtD = lognormal(meanlog = log(0.92), sdlog = 0.02)\", \"hr_HS_trtE = lognormal(meanlog = log(0.92), sdlog = 0.02)\",\n               \"u_H = beta(shape1 = 200, shape2 = 3)\",\"u_S = beta(shape1 = 130, shape2 = 45)\",\"c_S = gamma(shape = 44.4, scale = 22.5)\", \"c_trtA = gamma(shape = 12.5, scale = 2)\",\"c_trtB = gamma(shape = 12, scale = 83.3)\",\"c_trtC = gamma(shape = 36.144, scale = 83)\",\"c_trtD = gamma(shape = 18.67, scale = 83)\",\"c_trtE = gamma(shape = 60.24, scale = 83)\")\n\n\nparams <- list(r_HS, r_HD, hr_S, hr_HS_trtB, hr_HS_trtC, hr_HS_trtD, hr_HS_trtE,\n               u_H,u_S,c_S, c_trtA,c_trtB,c_trtC,c_trtD,c_trtE)\n\npdf_params <- \n  params %>% \n  map2(.,params_lut,~({\n    .x %>% animate_pdf_to_cdf(scene = 1) + ggtitle(.y)\n    ggsave(here::here(glue::glue(\"lectures/media/{.x$param[1]}.png\")),height=4, width=5)\n  })) %>% \n  set_names(c(\"r_HS:gamma(shape = 30,rate = 200)\", \"r_HD=gamma(shape = 60, rate = 10000)\", \"hr_S=lognormal(meanlog = log(3), sdlog = 0.01)\", \"hr_HS_trtB=lognormal(meanlog = log(0.96), sdlog = 0.02)\", \"hr_HS_trtC=lognormal(meanlog = log(0.88), sdlog = 0.02)\", \"hr_HS_trtD=lognormal(meanlog = log(0.92), sdlog = 0.02)\", \"hr_HS_trtE=lognormal(meanlog = log(0.92), sdlog = 0.02)\",\n               \"u_H=beta(shape1 = 200, shape2 = 3)\",\"u_S=beta(shape1 = 130, shape2 = 45)\",\"c_S=gamma(shape = 44.4, scale = 22.5)\", \"c_trtA=gamma(shape = 12.5, scale = 2)\",\"c_trtB=gamma(shape = 12, scale = 83.3)\",\"c_trtC=gamma(shape = 36.144, scale = 83)\",\"c_trtD=gamma(shape = 18.67, scale = 83)\",\"c_trtE=gamma(shape = 60.24, scale = 83)\"))\n\ncdf_params <- \n  params %>% \n  map2(.,params_lut,~({\n    set.seed(23)\n    .x %>% animate_pdf_to_cdf(scene = 3,q_ = round(runif(5, min = 0, max = 1),3),breaks_to_show = seq(0,1,0.1)) + ggtitle(.y)\n    ggsave(here::here(glue::glue(\"lectures/media/cdf{.x$param[1]}.png\")),height=4, width=5)\n  })) %>% \n  set_names(c(\"r_HS\", \"r_HD\", \"hr_S\", \"hr_HS_trtB\", \"hr_HS_trtC\", \"hr_HS_trtD\", \"hr_HS_trtE\",\n               \"u_H\",\"u_S\",\"c_S\", \"c_trtA\",\"c_trtB\",\"c_trtC\",\"c_trtD\",\"c_trtE\"))\n\n\n```\n\n## How Do We Draw PSA Values?\n\n::: incremental\n-   Central limit tells us that distribution for many estimated parameters is normal.\n-   However, often we do not rely on a single parameter estimate, but rather on a range of estimates from the literature.\n-   In any PSA, we want to specify parameter uncertainty in such a way as to capture the overall level of uncertainty in model parameters.\n:::\n\n## How Do We Draw PSA Values?\n\n| Parameter Type                  | Distribution     |\n|---------------------------------|------------------|\n| Probability                     | beta             |\n| Rate                            | gamma            |\n| Utility weight                  | beta             |\n| Right skew (e.g., cost)         | gamma, lognormal |\n| Relative risks or hazard ratios | lognormal        |\n| Odds Ratio                      | logistic         |\n\n## How Do I Draw Values\n\n\nhttps://yuhanxuan.shinyapps.io/shiny4dist/\n\n\n\n<!-- ## How Do We Draw PSA Values? -->\n\n<!-- ::: r-stack -->\n<!-- ![](media/r_HS.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/r_HD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtB.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtC.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/hr_HS_trtE.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/u_H.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/u_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_S.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtA.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtB.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtC.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtD.png){.fragment height=\"500px\"} -->\n\n<!-- ![](media/c_trtE.png){.fragment height=\"500px\"} -->\n<!-- ::: -->\n\n<!-- ## How Do We Draw PSA Values -->\n\n<!-- ::: incremental -->\n<!-- -   All the model parameters have different uncertainty distributions. How do we draw values? -->\n<!-- -   **Inverse Transform Method** -->\n<!-- -   Idea: randomly sample from quantiles in the distribution. -->\n<!-- ::: -->\n\n<!-- ## How Do We Draw PSA Values -->\n\n<!-- ::: incremental -->\n<!-- -   Requires drawing a random number between 0 and 1 (the quantile) -->\n<!-- -   Requires an *inverse cumulative density function* -->\n<!-- -   You can do this in Excel! -->\n<!-- ::: -->\n\n<!-- ## Normal Distribution: PDF -->\n\n<!-- ![](media/pdf-to-cdf-norm.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Normal Distribution: CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm4.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Normal Distribution: PDF to CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm.gif){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n<!-- anim_norm -->\n<!-- ``` -->\n\n<!-- ## Normal Distribution: CDF -->\n\n<!-- ![](media/pdf-to-cdf-norm4.png){fig-align=\"center\" layout-valign=\"center\" height=\"500px\"} -->\n\n<!-- ## Drawing from an Arbitrary PSA Distribution -->\n\n<!-- 1.  Draw a random number between 0 and 1 (`RAND()`) -->\n<!-- 2.  Feed this number through the quantile function (\"inverse cumulative density function\") for the specified distribution. -->\n<!-- 3.  Repeat as many times as needed for the PSA (e.g., 1,000 times) -->\n\n## Constructing a PSA Sample\n\nFor a given iteration $j$\n\n1.  Draw separate PSA values from the uncertainty distributions in your model.\n2.  Run the model and calculate model outputs (e.g., total costs and QALYs for each strategy).\n3.  Record the PSA parameter values and the outcome results in a table.\n4.  Repeat 1-3 many times.\n\n## Common PSA Distributions in Amua\n\n| Parameter Type                  | Distribution     | Amua                      |\n|---------------------------------|------------------|---------------------------|\n| Probability                     | beta             | Beta(shape1,shape2,\\~)    |\n| Rate                            | gamma            | Gamma(shape, scale, \\~)   |\n| Utility weight                  | beta             | Beta(shape1,shape2,\\~)    |\n| Right skew (e.g., cost)         | gamma, lognormal | LogNorm(shape,scale,\\~)   |\n| Relative risks or hazard ratios | lognormal        | LogNorm(shape,scale,\\~)   |\n| Odds Ratio                      | logistic         | Logistic(location, scale) |\n\n## Exmample: Uncertainty in Utility Weight\n\n- Base case value: 0.95\n- Sample from `Beta(95,5,~)`\n- Alternatively, sample from `Beta(950,50,~)`\n\n## Exmample: Uncertainty in Utility Weight\n\n```{r, echo = FALSE}\n#| fig-width: 8\n#| fig-height: 5\n#| fig-align: center\np = tibble(samp1 = rbeta(95,5,n=1e4), samp2 = rbeta(950,50,n=1e4)) %>% \n  mutate(index = row_number()) %>% \n  gather(samp,value,-index) %>% \n  mutate(samp = case_when(samp == \"samp1\" ~ \"Beta(95,5,~)\", \n                          samp == \"samp2\" ~ \"Beta(950,50,~\")) %>% \n  ggplot() + geom_density(aes(group = samp, x = value, colour =samp)) + \n  hrbrthemes::theme_ipsum() + ggsci::scale_colour_d3() + \n  labs(title = \"Utility Weight Uncertainty\", x = \"Utility Weight Value\", y = \"Density\") + \n  geom_vline(aes(xintercept = 0.95))\n\np_labeled <- directlabels::direct.label(p, \"top.points\") + scale_y_continuous(limits = c(0,70))\nprint(p_labeled)\n```\n\n# Interactive Amua Session \n\n# 3. How Do We Summarize PSA Results?\n\n## How Do We Summarize PSA Results?\n\n::: columns\n::: column\n-   Plot costs and QALYs of each iteration to show degree of variation in estimates.\n-   Figure plots values at each iteration, the average across 1,000 iterations (large points) and ellipses that capture \\~95% of points.\n:::\n\n::: column\n```{r}\n#| fig.height=10\nplot.psa(l_psa) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  xlab(\"Effectiveness (QALYs)\") +\n  guides(col = guide_legend(nrow = 2)) +\n  theme(legend.position = \"bottom\")\n```\n:::\n:::\n\n\n## Cost Effectiveness Acceptability Curves\n\n-   CEACs summarize the degree of uncertainty as captured by our PSA.\n\n-   CEAC represents the (Bayesian) probability of each option being cost-effective at different levels of the cost-effectiveness threshold $\\lambda$.\n\n[Source](https://onlinelibrary.wiley.com/doi/full/10.1111/j.1524-4733.2008.00358.x)\n\n## Cost Effectiveness Acceptability Curves\n\n```{r}\nplot.ceac(ceac_obj, frontier=FALSE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n\n```\n\n## Constructing the CEAC\n\n::: columns\n::: column\n1.  Define a WTP value.\n:::\n\n::: column\n$\\lambda = 50000$\n:::\n:::\n\n## Constructing the CEAC\n\n2.  Use the PSA sample to calculate the **Net Monetary Benefit (NMB)** and/or the **Net Health Benefit (NHB)** of each strategy.\n\nNet Monetary Benefit\n\n$$\nTOTQALY * \\lambda - TOTCOST\n$$\n\n$$\nNet Health Benefit $$ TOTQALY - \\frac{TOTCOST}{\\lambda} \\$\\$\n\n## PSA Sample\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\ndf_psa <- \ntibble::tribble(\n  ~totcost_trtA, ~totcost_trtB, ~totcost_trtC, ~totcost_trtD, ~totcost_trtE, ~totqaly_trtA, ~totqaly_trtB, ~totqaly_trtC, ~totqaly_trtD, ~totqaly_trtE,\n    19619.47188,   25588.07151,   37065.37786,   23997.76554,    40797.1777,   18.53716587,   18.61511665,   18.72621501,   18.65291992,   18.65291992,\n    11776.92856,   17379.41979,   36873.01518,   19453.58814,   45567.64775,   17.01051936,    17.1082885,   17.19659669,    17.1353478,    17.1353478,\n    13292.49032,   19268.95151,   33789.88511,    19886.4207,   41933.20163,   17.25143381,   17.35911175,   17.51076684,   17.46195864,   17.46195864,\n    14652.37199,   19102.09981,   25153.62823,   19245.88282,    33977.4242,   16.12758803,   16.13136416,   16.37773559,   16.25371623,   16.25371623,\n    13286.67336,   15912.61046,   26997.83009,   18687.76003,   39152.51988,   15.93832559,   16.03653696,   16.14110603,   16.07599929,   16.07599929,\n    14958.84595,   17505.56022,   32929.45939,   20602.67016,   49327.29579,   16.01576183,   16.08855226,   16.28681468,   16.18276785,   16.18276785\n  ) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) \n\ndf_psa %>% \n  mutate_all(~round(.,4)) %>% \n  kable() %>% \n  kable_styling()\n```\n:::\n\n## Net Monetary Benefit\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nwtp = 50000\ndf_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything())   %>% \n  select(-max) %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE,caption=\"Note: Values shown are for a single value of lambda (50,000/QALY)\") %>% \n  kable_styling()\n```\n:::\n\n## Identify the Optimal Strategy\n\n3.  For each iteration, determine which strategy **maximizes** NMB/NHB.\n\n-   This is the optimal strategy for a given $\\lambda$ value.\n\n## Identify the Optimal Strategy\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nwtp = 50000\ndf_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) %>% \n\n  mutate(\n    NMB_A = cell_spec(NMB_A,\"html\",\n                      color = ifelse(NMB_A==max,\"white\",\"black\"),\n                      background = ifelse(NMB_A==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_A==max,T,F))) %>% \n  mutate(\n    NMB_B = cell_spec(NMB_B,\"html\",\n                      color = ifelse(NMB_B==max,\"white\",\"black\"),\n                      background = ifelse(NMB_B==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_B==max,T,F))) %>% \n  mutate(\n    NMB_C = cell_spec(NMB_C,\"html\",\n                      color = ifelse(NMB_C==max,\"white\",\"black\"),\n                      background = ifelse(NMB_C==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_C==max,T,F))) %>% \n  mutate(\n    NMB_D = cell_spec(NMB_D,\"html\",\n                      color = ifelse(NMB_D==max,\"white\",\"black\"),\n                      background = ifelse(NMB_D==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_D==max,T,F))) %>% \n  mutate(\n    NMB_E = cell_spec(NMB_E,\"html\",\n                      color = ifelse(NMB_E==max,\"white\",\"black\"),\n                      background = ifelse(NMB_E==max,\"red\",\"white\"),\n                      bold = ifelse(NMB_E==max,T,F))) %>%   \n  select(-max) %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## Identify the Optimal Strategy\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nex_ceac_ <- \n  df_psa %>% \n  mutate(NMB_A = totqaly_trtA * wtp - totcost_trtA,\n         NMB_B = totqaly_trtB * wtp - totcost_trtB,\n         NMB_C = totqaly_trtC * wtp - totcost_trtC,\n         NMB_D = totqaly_trtD * wtp - totcost_trtD,\n         NMB_E = totqaly_trtE * wtp - totcost_trtE) %>% \n  select(starts_with(\"NMB_\")) %>% \n  mutate_all(~round(.,0)) %>% \n  mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n  mutate(PSA_ID = row_number()) %>% \n  select(PSA_ID, everything()) %>% \n  mutate(NMB_A = ifelse(NMB_A==max,1,0)) %>% \n  mutate(NMB_B = ifelse(NMB_B==max,1,0)) %>% \n  mutate(NMB_C = ifelse(NMB_C==max,1,0)) %>% \n  mutate(NMB_D = ifelse(NMB_D==max,1,0)) %>% \n  mutate(NMB_E = ifelse(NMB_E==max,1,0)) %>% \n  select(-max) \n\nex_ceac <- \n  ex_ceac_ %>% \n  mutate(\n    NMB_A = cell_spec(NMB_A,\"html\",\n                      color = ifelse(NMB_A==1,\"white\",\"black\"),\n                      background = ifelse(NMB_A==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_A==1,T,F))) %>% \n  mutate(\n    NMB_B = cell_spec(NMB_B,\"html\",\n                      color = ifelse(NMB_B==1,\"white\",\"black\"),\n                      background = ifelse(NMB_B==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_B==1,T,F))) %>% \n  mutate(\n    NMB_C = cell_spec(NMB_C,\"html\",\n                      color = ifelse(NMB_C==1,\"white\",\"black\"),\n                      background = ifelse(NMB_C==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_C==1,T,F))) %>% \n  mutate(\n    NMB_D = cell_spec(NMB_D,\"html\",\n                      color = ifelse(NMB_D==1,\"white\",\"black\"),\n                      background = ifelse(NMB_D==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_D==1,T,F))) %>% \n  mutate(\n    NMB_E = cell_spec(NMB_E,\"html\",\n                      color = ifelse(NMB_E==1,\"white\",\"black\"),\n                      background = ifelse(NMB_E==1,\"red\",\"white\"),\n                      bold = ifelse(NMB_E==1,T,F))) %>%   \n  rename(MAX_IS_A = NMB_A,\n         MAX_IS_B = NMB_B,\n         MAX_IS_C = NMB_C,\n         MAX_IS_D = NMB_D,\n         MAX_IS_E = NMB_E) \nex_ceac %>% \n  kable(digits=0,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## How Often is the Stratgy the Optimal?\n\n-   The average of this binary indicator across all PSA model runs is the fraction of the time each strategy is optimal *for a given value of* $\\lambda$.\n\n## How Often is the Strategy the Optimal?\n\n::: {style=\"font-size: 0.8em\"}\n```{r}\nex_ceac_ %>% \n   rename(MAX_IS_A = NMB_A,\n         MAX_IS_B = NMB_B,\n         MAX_IS_C = NMB_C,\n         MAX_IS_D = NMB_D,\n         MAX_IS_E = NMB_E)  %>% \n  summarise_at(vars(starts_with(\"MAX\")),mean) %>% \n  mutate(lambda = wtp) %>% \n  select(lambda, everything()) %>% \n  kable(digits=4,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n```\n:::\n\n## How Often is the Strategy the Optimal?\n\n-   Now repeat this exercise across a range of values for $\\lambda$.\n\n## How Often is the Strategy the Optimal?\n\n::: {style=\"font-size: 0.6em\"}\n```{r}\n\nex_ceac_full <- \n  sort(c(50000,seq(20000,200000,20000))) %>% map(~({\n    ex_ceac_ <- \n    df_psa %>% \n    mutate(NMB_A = totqaly_trtA * .x - totcost_trtA,\n           NMB_B = totqaly_trtB * .x - totcost_trtB,\n           NMB_C = totqaly_trtC * .x - totcost_trtC,\n           NMB_D = totqaly_trtD * .x - totcost_trtD,\n           NMB_E = totqaly_trtE * .x - totcost_trtE) %>% \n    select(starts_with(\"NMB_\")) %>% \n    mutate_all(~round(.,0)) %>% \n    mutate(max = pmax(NMB_A,NMB_B,NMB_C,NMB_D,NMB_E)) %>% \n    mutate(PSA_ID = row_number()) %>% \n    select(PSA_ID, everything()) %>% \n    mutate(NMB_A = ifelse(NMB_A==max,1,0)) %>% \n    mutate(NMB_B = ifelse(NMB_B==max,1,0)) %>% \n    mutate(NMB_C = ifelse(NMB_C==max,1,0)) %>% \n    mutate(NMB_D = ifelse(NMB_D==max,1,0)) %>% \n    mutate(NMB_E = ifelse(NMB_E==max,1,0)) %>% \n    select(-max) \n    \n    ex_ceac_ %>% \n     rename(MAX_IS_A = NMB_A,\n           MAX_IS_B = NMB_B,\n           MAX_IS_C = NMB_C,\n           MAX_IS_D = NMB_D,\n           MAX_IS_E = NMB_E)  %>% \n    summarise_at(vars(starts_with(\"MAX\")),mean) %>% \n    mutate(lambda = .x) %>% \n    select(lambda, everything())\n    \n  })) %>% \n    bind_rows()\n\nex_ceac_full %>% \n  kable(digits=4,'html', booktabs =TRUE, escape = FALSE) %>% \n  kable_styling()\n\n```\n:::\n\n## How Often is the Strategy the Optimal?\n\n-   We can now plot these data:\n    -   **x-axis**: $\\lambda$.\n    -   **y-axis**: Fraction/percent of the time each strategy is optimal.\n-   This is the Cost-Effectiveness Acceptability Curve\n\n## Cost Effectiveness Acceptability Curve (CEAC)\n\n```{r}\nplot.ceac(ceac_obj, frontier=FALSE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n# Interactive Amua Session \n\n## What Does the CEAC Tell Us?\n\n-   Fenwick et al. (2001) the probability of being cost-effective cannot be used to determine the optimal option.\n\n-   If the objective is to maximize health gain, decisions should be made based on *expected* net benefit, regardless of the uncertainty associated with the decision.\n\n## Cost Effectiveness Acceptability Frontier\n\n-   Layer you can add to the CEAC.\n-   Shows the probability that the optimal option is cost-effective at different $\\lambda$ values.\n-   The CEAF is not necessarily the top \"envelope\" or region of the CEAC!\n\n## Cost Effectiveness Acceptability Frontier\n\n```{r}\nplot.ceac(ceac_obj, frontier=TRUE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n1.  Determine average costs and QALY for each strategy across *all* PSA iterations.\n2.  Calculate NMB/NHB based on these averages.\n3.  Determine optimal strategy based on the strategy that maximizes NMB/NHB.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n4.  Repeat for a range of values of $\\lambda$.\n5.  For each strategy find the range of values of $\\lambda$ for which that strategy is optimal.\n\n-   This determines the \"switch points\" of the CEAF.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n::: incremental\n6.  The lowest value of $\\lambda$ for which a given strategy is optimal is $\\approx$ ICER for that strategy.\n\n7.  The highest value of $\\lambda$ for which a given strategy is optimal is the ICER for the next most costly option.\n:::\n\n## Cost Effectiveness Acceptability Frontier\n\n```{r}\nplot.ceac(ceac_obj, frontier=TRUE) +\n  ggthemes::scale_color_colorblind() +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position = c(0.82, 0.5))\n```\n\n## Expected Value of Perfect Information\n\nRecall the two questions from the beginning of this talk:\n\n1.  Which strategies are cost-effective given constraints and values and *based on current evidence*?\n2.  Should we invest more resources to reduce uncertainty in our decisions?\n\n## Expected Value of Perfect Information\n\n-   CEAC and CEAF provide information on the degree to which uncertainty informs question 1.\n\n-   These plots can help give us a sense of whether more research to reduce uncertainty may be valuable (Question 2).\n\n-   **Value of Information** analyses provide a more concrete answer to Question 2.\n\n## Expected Value of Perfect Information {.smaller}\n\n::: columns\n::: column\n::: incremental\n-   We will not cover VOI methods in detail here, but short courses are available.\n-   Figure shows an instance where model is sensitive to uncertainty, but decisions are not.\n-   It's not really worth pursuing additional research because we make the same decision regardless of the parameter values.\n:::\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n![](images/paste-BB09C5B7.png)\n:::\n:::\n:::\n\n## Expected Value of Perfect Information {.smaller}\n\n::: columns\n::: column\n::: incremental\n-   If **decisions** are sensitive to uncertainty, then the value of information is high.\n-   It may be worth pursuing additional research to reduce model parameter uncertainty.\n:::\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n![](images/paste-0B14886B.png)\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n-   You can use VOI methods with your PSA sample to rank-order parameters in terms of their importance in informing **decision uncertainty**.\n\n-   Next slides briefly show you how to construct one VOI measure: the **expected value of perfect information**.\n\n## Expected Value of Perfect Information\n\n-   Idea: What is the value of reducing **all** uncertainty in the model?\n-   Provides a rough sense of whether additional research should be pursued.\n-   A related concept, the **expected value of partial perfect information,** can be constructed to tell us *which parameters* (or sets of parameters) we should focus on.\n\n## Expected Value of Perfect Information\n\n-   The \"ingredients\" for calculating the EVPI for a given $\\lambda$ value are all in the CEAC and CEAF inputs.\n\n## Expected Value of Perfect Information\n\n::: incremental\n1.  Determine the *overall* optimal strategy based on NMB as determined by average costs and QALYs across *all* PSA model runs.\n\n-   Call this strategy $s^*$ (e.g., $s^*=D$)\n-   NMB for this strategy is $\\overline{NMB}(s^*)$.\n:::\n\n## Expected Value of Perfect Information\n\n::: incremental\n2.  In each PSA iteration, find the optimal strategy based on the NMB for each strategy *in that particular iteration*.\n\n-   Call this strategy $s_m$ (e.g., $s_m=B$)\n-   NMB for this strategy is $NMB_m(s_m)$.\n:::\n\n## Expected Value of Perfect Information\n\n-   Now let's think about the economic consequences of $\\overline{NMB}(s^*)$ and $NMB_m(s_m)$\n\n## Expected Value of Perfect Information\n\n-   On average, we would select strategy $s^*$ because it results in the highest expected health gain (i.e., it maximizes $\\overline{NMB}(s^*)$).\n\n-   But what if that decision is wrong?\n\n## Expected Value of Perfect Information\n\n-   The difference between $NMB_m(s_m)$ and $\\overline{NMB}(s^*)$ for any PSA iteration provides an estimate of the **opportunity cost** of making the wrong decision.\n\n-   If $s_m=s^*$, then $s_m - s^* = 0$.\n\n    -   There is no opportunity cost of making the wrong decision!\n\n## Expected Value of Perfect Information\n\n-   The difference between $NMB_m(s_m)$ and $\\overline{NMB}(s^*)$ for any PSA iteration provides an estimate of the **opportunity cost** of making the wrong decision.\n\n-   If $s_m>s^*$, then $s_m - s^* > 0$.\n\n    -   There is an opportunity cost to making the wrong decision.\n\n## Expected Value of Perfect Information\n\n-   The average value of $s_m - s^*$ in our PSA sample is the **expected value of perfect information (EVPI)**\n\n-   It summarizes the degree to which there is an oportunity cost to making the wrong decision in our model.\n\n## Expected Value of Perfect Information\n\n-   Just as we did with the CEAC and CEAF, you can calculate an EVPI value for various $\\lambda$ and construct a EVPI curve.\n\n## Expected Value of Perfect Information\n\n```{r}\nplot.evpi(evpi)\n```\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   At $\\lambda$=\\$100,000/QALY, there is **high** value of information.\n-   Our decision to implement one strategy over another is sensitive to uncertainty in our model.\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n```{r}\nplot.evpi(evpi)\n```\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   Note that our ICER for strategy C is very close to \\$100,000.\n-   At a decision threshold of $\\lambda$ = \\$100,000/QALY, different values for model parameters could result in adoption (i.e., ICER \\< $\\lambda$) or nonadoption of strategy C.\n:::\n\n::: column\n::: {style=\"font-size: 0.8em\"}\n```{r}\nrownames(df_cea) <- NULL\ndf_cea %>% \n  select(Strategy,Cost, Effect, ICER, Status) %>% \n  kable(digits = 3) %>% \n  kable_styling()\n```\n:::\n:::\n:::\n\n## Expected Value of Perfect Information\n\n::: columns\n::: column\n-   At $\\lambda$=\\$10,000/QALY, there is **low** value of information.\n-   Our decision to implement one strategy over another is **not** sensitive to uncertainty in our model.\n:::\n\n::: column\n::: {style=\"padding-top: 150px;\"}\n```{r}\nplot.evpi(evpi)\n```\n:::\n:::\n:::\n\n# Interactive Amua Session \n\n<!-- ## Sampling Parameters -->\n\n<!-- ```{r, eval = FALSE} -->\n\n<!-- #| echo: false -->\n\n<!-- #| message: false -->\n\n<!-- #| warning: false -->\n\n<!-- library(randtoolbox) -->\n\n<!-- library(gganimate) -->\n\n<!-- library(ggthemes) -->\n\n<!-- N = 1000 -->\n\n<!-- int = 0.05 -->\n\n<!-- get_mc <- function(N) { -->\n\n<!--   data.frame(X1 = runif(N), -->\n\n<!--              X2= runif(N)) %>%  -->\n\n<!--   as_tibble() -->\n\n<!-- } -->\n\n<!-- get_hs <- function(N) { -->\n\n<!--   halton(N,dim=2) %>%  -->\n\n<!--   data.frame() %>%  -->\n\n<!--   as_tibble() -->\n\n<!-- } -->\n\n<!-- get_coverage <- function(df_, int) { -->\n\n<!--   df_ %>%  -->\n\n<!--     mutate(X1_r = plyr::round_any(X1,int,ceiling), -->\n\n<!--          X2_r = plyr::round_any(X2,int,ceiling)) %>%  -->\n\n<!--   select(X1_r,X2_r) %>%  -->\n\n<!--   mutate(n=1) %>%   -->\n\n<!--   right_join( -->\n\n<!--     crossing(X1_r = seq(0,1,int), X2_r = seq(0,1,int)) , c(\"X1_r\",\"X2_r\") -->\n\n<!--   ) %>%  -->\n\n<!--   mutate(n = ifelse(is.na(n),0,n)) %>%  -->\n\n<!--   arrange(X1_r, X2_r) %>%  -->\n\n<!--   ungroup() %>%  -->\n\n<!--   summarise(n = mean(n)) %>%  -->\n\n<!--   pull(n) -->\n\n<!-- } -->\n\n<!-- get_mc(N=1000) %>% get_coverage(int=0.03) -->\n\n<!-- get_hs(N=1000) %>% get_coverage(int=0.03) -->\n\n<!-- get_hs(N=10)  %>%  -->\n\n<!--   mutate(iteration = row_number()) %>%  -->\n\n<!--   mutate(end = 100) %>%  -->\n\n<!--   ggplot(aes(x = X1, y = X2)) +  -->\n\n<!--   geom_point() +  -->\n\n<!--   theme_bw() +  -->\n\n<!--   transition_events(start = iteration, end = end) -->\n\n<!-- data <- data.frame( -->\n\n<!--   x = 1:10, -->\n\n<!--   y = runif(10), -->\n\n<!--   begin = runif(10, 1, 100), -->\n\n<!--   length = 1000, -->\n\n<!--   enter = 100, -->\n\n<!--   exit = 100 -->\n\n<!-- ) -->\n\n<!-- N = 75 -->\n\n<!-- set.seed(123) -->\n\n<!-- anim_mc <- get_mc(N) %>%  -->\n\n<!--   mutate( -->\n\n<!--     begin = runif(N, 1, N*10), -->\n\n<!--     length = 200, -->\n\n<!--     enter = runif(N,1,N), -->\n\n<!--     exit = 1000 -->\n\n<!--   ) %>%  -->\n\n<!--   ggplot( aes(x=X1, y=X2)) + -->\n\n<!--   geom_point(size = 2) + -->\n\n<!--   labs(x = \"Parameter 1\", -->\n\n<!--        y = \"Parameter 2\") + -->\n\n<!--   theme_bw() + -->\n\n<!--   transition_events(start = begin, -->\n\n<!--                     end = begin + length, -->\n\n<!--                     enter_length = enter, -->\n\n<!--                     exit_length = exit) + -->\n\n<!--  enter_grow()  -->\n\n<!-- anim_save(\"lectures/media/lec_psa/animated-monte-carlo.gif\", anim_mc) -->\n\n<!-- set.seed(123)   -->\n\n<!-- anim_hs <-  -->\n\n<!--   get_hs(N) %>%  -->\n\n<!--   mutate( -->\n\n<!--     begin = runif(N, 1, N*10), -->\n\n<!--     length = 200, -->\n\n<!--     enter = runif(N,1,N), -->\n\n<!--     exit = 1000 -->\n\n<!--   ) %>%  -->\n\n<!--   ggplot( aes(x=X1, y=X2)) + -->\n\n<!--   geom_point(size = 2) + -->\n\n<!--   labs(x = \"Parameter 1\", -->\n\n<!--        y = \"Parameter 2\") + -->\n\n<!--   theme_bw() + -->\n\n<!--   transition_events(start = begin, -->\n\n<!--                     end = begin + length, -->\n\n<!--                     enter_length = enter, -->\n\n<!--                     exit_length = exit) + -->\n\n<!--  enter_grow()  -->\n\n<!-- anim_save(\"lectures/media/lec_psa/animated-halton.gif\", anim_hs) -->\n\n<!-- ``` -->\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ![Monte Carlo Draws](media/lec_psa/animated-monte-carlo.gif){fig-align=\"center\" layout-valign=\"center\"} -->\n\n<!-- ::: -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n<!-- ![Halton Sequence](media/lec_psa/animated-halton.gif){fig-align=\"center\" layout-valign=\"center\"} -->\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n<!-- test -->\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":"katex","slide-level":2,"to":"revealjs","incremental":false,"highlight-style":"ayu-mirage","output-file":"lec_psa.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.8.24","auto-stretch":true,"title":"9. Systematic Approaches to Understanding Model Uncertainty","editor_options":{"chunk_output_type":"console"},"editor":{"markdown":{"wrap":72}},"bibliography":["references.bib"],"theme":"slides.scss","slideNumber":true,"logo":"../vchem.png","transition":"fade","backgroundTransition":"fade","footer":"[Back to Website](../index.html)\n"}}},"projectFormats":["html"]}