{
  "hash": "e5ac5df0f00f5540eda6e52b7e7ceea2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Modeling DALYs in Amua\nformat:\n  revealjs:\n    theme: slides.scss\n    incremental: false\n    slide-number: true\n    logo: ../vchem.png\n    html-math-method: katex\n    transition: fade\n    background-transition: fade\n    highlight-style: ayu-mirage\n    footer: |\n      [Back to Website](../index.html)\neditor_options: \n  chunk_output_type: console\neditor: \n  markdown: \n    wrap: 72\nbibliography: \"../references_daly.bib\"    \n---\n\n\n::: {.cell}\n\n:::\n\n\n## Learning Objectives\n\n- Review of DALY health outcomes\n- Tips and tricks for modeling DALYs in Amua\n\n# Overview of DALY Outcomes \n\n## Common Outcomes\n\n::: incremental\n1.  Occupancy-based payoffs:\n\n-   Utility/DALY weight applied for a time period / step.\n-   Treatment/disease cost per time period / step.\n\n2.  Transition-based payoffs:\n\n-   One-time event-based cost (e.g., disease-related death, initial Dx,\n    etc.).\n-   One-time health outcome (e.g., years of life lost to premature\n    mortality)\n:::\n\n## Disability-Adjusted Life Years (DALYs)\n\n::: incremental\n-   Reflect both occupancy- and transition-based payoffs.\n-   There's also *very* little guidance on how to structure a decision\n    model for DALY outcomes.\n-   We'll show you how today!\n:::\n\n## DALYs\n\n::: incremental\n-   Origin story: Global Burden of Disease Study\n\n-   Deliberately a measure of health, not welfare/utility\n\n-   Similar to QALYs, two dimensions of interest:\n\n    -   Length of life (differences in life expectancy)\n\n    -   Quality of life (measured by disability weight)\n:::\n\n## DALYs\n\n[![](images/DALY_disability_affected_life_year_infographic.svg){width=\"1500\"}](https://en.wikipedia.org/wiki/Disability-adjusted_life_year)\n\n::: fragment\n**DALYs = YLL + YLD**\n\n-   YLL (Years of Life Lost)\n-   YLD (Years Lived with Disability)\n:::\n\n\n## Years of Life Lost to Disease\n\nFor a given condition $c$,\n\n$$\nYLD(c) = D_c \\cdot L_c\n$$\n\n::: incremental\n-   $D_c$ is the condition's disability weight\n-   $L_c$ is the time lived with the disease.\n:::\n\n## [Years of Life Lost to Premature Mortality]{.r-fit-text}\n\n::: incremental\n-   YLL are defined by by a \"loss function.\"\n-   Drawn from a reference life table, indicating remaining life\n    expectancy at age $a$.\n-   $$\n    YLL(a)= Ex(a)\n    $$\n:::\n\n## [Years of Life Lost to Premature Mortality]{.r-fit-text}\n\n::: incremental\n\n\n:::\n\n## DALYs\n\n$$\nDALY(c,a) = YLD(c) + YLL(a)\n$$\n\n## Evolution of DALY Calculations\n\n::: incremental\n-   **Historical Practice:** Initial GBD studies applied age-weighting\n    and 3% annual time discounting.\n-   **Changes Post-2010:** Discontinuation of these practices for a more\n    descriptive DALY measure.\n:::\n\n## Current Discounting Practices\n\n::: incremental\n-   **WHO-CHOICE:** Time discounting of health outcomes.\n:::\n\n## Takeaways\n\n::: incremental\n-   Modeling DALYs in Amua is straightforward if you don't use\n    discounting.\n    -   For YLDs, use disability weight like you would a utility weight.\n    -   For YLLs, use one-time \"cost\" of remaining life expectancy.\n        - YLL = `tbl_reference_life_table[initial_age + t, 1]`\n:::\n\n## Takeaways\n\n::: incremental\n-   But if you do need to discount ...\n    -   You're going to see some math expressions that take care of\n        discounting for YLL outcomes.\n    -   This math adds some complexity but not much insight, so I'll\n        gloss over it a bit\n    -   We'll provide you the formulas to use here and in the .amua\n        model file.\n:::\n\n## Mathematical Formulation for DALYs in AMUA\n\n-  $YLD(c) = D_c$.\n\n-  $YLL(a,t)=  Ex(a)\\exp(-\\ln(1+r)*t)$.\n    - $a$ is the time of death\n    -   $r$ is the discount rate you're using in the model (e.g.,\n    3%).\n    \n    - $t$ is the cycle number at which premature death occurs. \n\n## Mathematical Formulation for DALYs in AMUA\n\n-  $YLD(c)=$ `dw_c`.\n\n-   $YLL(a,t)=$ `tbl_ref_lt[initial_age+t,1]` $*\\exp(-\\log(1+$ `r_disc` $)*$ `t`$)$. \n\n\n\n## Overview of Decision Problem\n\n::: incremental\n-   Progressive disease model (from case study)\n-   Focus only on cohort of individuals who develop mild disease.\n-   Follow until death (from disease-related or other causes)\n:::\n\n## Overview of Decision Problem\n\n::: incremental\n-   Major difference from case study: can ignore Healthy state.\n-   Strategies: Status quo, prevention, treatment\n:::\n\n# Methods: Structuring the Model {background=\"#43464B\"}\n\n## State Transition Diagram {.nostretch}\n\n![](images/clipboard-2723911892.png){fig-align=\"center\" width=\"800\"}\n\n## Defining Outcomes in Amua\n\n::: incremental\n-   YLD: New Outcome. Use disability weights instead of utility weights!\n-   YLL: One-time \"event\" at time of death from disease.\n    -   \"Cost\": present value of remaining life expectancy at age of death in\n        the model.\n    -   Intuition: we penalize premature death from disease using the\n        remaining life expectancy at the age in which the person dies.\n- Need to also define the discount rate as a parameter `r_disc`\n:::\n\n## Interactive Amua Session\n\n## Occupancy-Based Payoff: YLD\n\n-   YLD is an \"occupancy-based\" payoff (i.e., YLD increments by\n    disability weight for each cycle in that health state).\n    -   Add `dw_mild` = 0.08\n    -   Add `dw_progressive` = 0.15\n    -   Add `dw_progressive_treated` = 0.13\n-   Mild disease state: `dw_mild`\n-   Progressive disease state: `dw_progressive`\n\n## Transition-Based Payoff: YLL\n\n-   Remaining life expectancies are drawn from the reference life table,\n    or from an endogenous life table.\n-   Import reference life table as lookup table---just like we did with\n    background mortality, etc.\n-   Remember to use the \"Truncate\" option because the life table may not\n    extend to the maximum age in the model.\n\n::: footer\nAdditional slides below (hit down button).\n:::\n\n## Life Expectancy & YLL\n\n::: incremental\n-   **Contextual Choices:** Remaining life expectancy values may vary by\n    research context [@anand2019].\n-   **Historical Method:** GBD uses an *exogenous* life table\n    approximating maximum human lifespan.\n-   **Alternatives:** *Endogenous* tables or models may be preferred in\n    certain cases.\n:::\n\n## Exogenous vs. Endogenous Life Tables\n\n::: incremental\n-   **Distinction:** Source of life expectancy values (external vs.\n    internal).\n-   **Exogenous:** Independent mortality risks, using GBD's reference\n    table.\n-   **Endogenous:** Specific to the population's mortality risks and\n    health states.\n:::\n\n## Incremental CEA\n\n- ICERs are based on cost per DALYs *averted*\n- Must export expected cost and DALY outcomes, then do ICER calculations outside Amua (e.g., Excel)\n- Alternative: define YLL and YLD outcomes as their negative values. \n  - CEA will work, but expected values will be negative. \n\n# Thanks!\n\n::: vertical-center-slide\n::: {.callout-note appearance=\"minimal\"}\nDraft manuscript (with R code) available online at\n<https://graveja0.github.io/dalys/>\n:::\n\n![](media/adobe-express-qr-code.png){fig-align=\"center\" width=\"25%\"}\n:::\n\n# References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}